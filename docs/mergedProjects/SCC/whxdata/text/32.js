rh._.exports({"0":[["Anweisungen"]],"1":[["\n"],["\n"],["\n","Der Anweisung ","IF"," muss ein boolescher Ausdruck \n folgen. Die Programmausführung wird in Abhängigkeit des Ergebnisses dieses \n Ausdruckes fortgeführt. Bei \"true\" wird der Anweisungsteil zwischen \n ","THEN"," und ","ELSE"," bearbeitet, bei \"false\" der Anweisungsteil \n zwischen ","ELSE"," und ","ENDIF",". Die Verwendung von ELSE ist optional.","\n",":","\n","Bei Abfragen von booleschen Werten dürfen \n keine Vergleichsoperatoren (=, >, <,...) angegeben werden. Die Abfrage \n erfolgt direkt auf die Variable (Abfrage auf true) oder mit dem Operator \n NOT (Abfrage auf false).","\n","Beispiel",":","\n","long     a, b","\n","bool     c","\n","if a > 0 then","\n","  b := 1","\n","else","\n","  b := 2","\n","endif","\n","if c then","\n","  b := 3","\n","endif","\n"," ","\n"],["\n","Der Anweisung ","switch"," muss ein numerischer Ausdruck \n vom Typ \"Int\", \"Long\" oder \"Double\" folgen. \n Für String oder Bool-Werte kann ","switch"," nicht ausgeführt werden. \n Dieser Ausdruck wird mit den Konstanten, die jeweils einem ","case","-Label \n folgen, verglichen. Ist ein Vergleich \"true\", wird der Programmteil \n bis zum nächsten ","case",", ","default"," oder ","end"," bearbeitet. \n Will man nach einem erfüllten Vergleich keine weiteren Abfragen mehr, \n muss am Ende des Anweisungsblocks der Befehl ","break"," stehen.","\n","Bei Abfragen von booleschen Werten dürfen wie bei der \n Anweisung IF...THEN...ENDIF keine Vergleichsoperatoren (=, >, <,..) \n angegeben werden. Die Abfrage erfolgt direkt auf die Variable (Abfrage \n auf true) oder mit dem Operator NOT (Abfrage auf false).","\n","Beispiel",":","\n","Long     a","\n","string   s","\n","switch a","\n","  case 0:","\n","    s := 'ZERO'","\n","    break","\n","  case 1:","\n","    s := 'ONE'","\n","    break","\n","  default:","\n","    s := 'TOO MANY'","\n","end","\n"," ","\n"],["\n","Der Anweisung ","while"," muss ein boolescher Ausdruck \n folgen. Der Anweisungsteil zwischen ","do"," und ","enddo"," wird solange \n ausgeführt, bis das Ergebnis dieses Ausdruckes den Wert false ergibt.","\n","Die Schleife kann durch den Befehl ","break"," abgebrochen \n werden. Der Befehl ","continue"," bewirkt, dass die Programmbearbeitung \n mit der Abfrage fortgesetzt wird.","\n","Bei Abfragen von booleschen Werten dürfen wie bei der \n Anweisung IF...THEN...ENDIF keine Vergleichsoperatoren (=, >, <,...) \n angegeben werden. Die Abfrage erfolgt direkt auf die Variable (Abfrage \n auf true) oder mit dem Operator NOT (Abfrage auf false).","\n","Beispiel",":","\n","long     a, b","\n","while a < 10 do","\n","  a := a + 1","\n","  if a mod 2 = 0 then","\n","    continue","\n","  endif  b := b + 3","\n","enddo","\n"," ","\n\n\n"]],"2":[["Anweisungen"]],"4":[["If ... Then \n ... Else ... Endif"],["Switch \n ... Case ... Default ... End"],["While ... Do ... Enddo"]],"id":"32"})