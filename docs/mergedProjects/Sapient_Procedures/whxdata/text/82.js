rh._.exports({"0":[["Logging von Tabellenänderungen"]],"1":[["\n"],["\n"],["\n","DML-Änderungen werden mit folgenden Informationen in \n der Tabelle SYS_CHANGE_LOG geloggt:","\n","\n\t","\n\t\t","NAME","\n\t\t","TYPE","\n\t\t","NULLABLE","\n\t\t","DEFAULT","\n\t\t","COMMENT","\n\t","\n\t","\n\t\t","ID","\n\t\t","SERIAL","\n\t\t","N","\n\t\t"," ","\n\t\t","PK: automatisch generierte ID.","\n\t","\n\t","\n\t\t","TABLE_NAME","\n\t\t","VARCHAR(80)","\n\t\t","N","\n\t\t"," ","\n\t\t","Name der Tabelle, an der die Änderung \n\t\t stattgefunden hat.","\n\t","\n\t","\n\t\t","USER_NAME","\n\t\t","VARCHAR(400)","\n\t\t","Y","\n\t\t"," ","\n\t\t","Name des Benutzers, der die Änderung \n\t\t durchgeführt hat.","\n\t","\n\t","\n\t\t","ACTION_TSTAMP","\n\t\t","TIMESTAMPTZ","\n\t\t","N","\n\t\t","current_timestamp","\n\t\t","Zeitstempel, an dem die Änderung \n\t\t stattgefunden hat.","\n\t","\n\t","\n\t\t","ACTION","\n\t\t","VARCHAR(1)","\n\t\t","N","\n\t\t"," ","\n\t\t","Durchgeführte Änderungsaktion (nur \n\t\t folgende Werte sind möglich: 'U'-Update, 'I'-Insert, 'D'-Delete).","\n\t","\n\t","\n\t\t","ORIGINAL_DATA","\n\t\t","CLOB","\n\t\t","Y","\n\t\t"," ","\n\t\t","Datenzustand vor der Änderung (NULL \n\t\t bei Insert).","\n\t","\n\t","\n\t\t","NEW_DATA","\n\t\t","CLOB","\n\t\t","Y","\n\t\t"," ","\n\t\t","Datenzustand nach der Änderung (NULL \n\t\t bei Delete).","\n\t","\n\t","\n\t\t","QUERY","\n\t\t","CLOB","\n\t\t","Y","\n\t\t"," ","\n\t\t","SQL-Query der durchgeführten Änderung.","\n\t","\n\t","\n\t\t","CLIENT_ADDR","\n\t\t","VARCHAR(80)","\n\t\t","Y","\n\t\t"," ","\n\t\t","IP-Adresse des Clients.","\n\t","\n\t","\n\t\t","MODIFIED_ID","\n\t\t","CLOB","\n\t\t","Y","\n\t\t"," ","\n\t\t","ID des geänderten Datensatzes.","\n\t","\n\t","\n\t\t","APPLICATION_NAME","\n\t\t","CLOB","\n\t\t","Y","\n\t\t"," ","\n\t\t","Name der Applikation, in der die \n\t\t Änderung initiiert wurde. Kann im Client geändert werden.","\n\t","\n","\n"," ","\n"],["\n","In PostgreSQL können Tabellenänderungen durch Trigger \n mitgeloggt werden. Dazu wurde folgender Trigger erstellt:","\n","CREATE TRIGGER taudi_tablename","\n","AFTER INSERT OR UPDATE OR DELETE ON tablename","\n","FOR EACH ROW EXECUTE PROCEDURE if_modified_func();","\n"," ","\n"],["\n","Der Aufruf funktioniert mit J-LIW erst ab Version 2.0.000RC3","\n","\n\t","\n\t","\n\t","\n\t\t","LgtConfig","\n\t\t","-outDir=C:/SVN/legatodb/sapient/trunk/code/postgresql/trigger","\n\t","\n\t","\n\t\t"," ","\n\t\t","-triggerBody=if_modified_func()","\n\t","\n\t","\n\t\t"," ","\n\t\t","-isDBMS=postgresql;","\n\t","\n","\n"," ","\n","Der Aufruf kann auch mit der Option tables eingeschränkt \n werden:","\n","Beispiel",": -tables=P_*","\n","\n\t","\n\t","\n\t","\n\t\t","LgtConfig","\n\t\t","-outDir=C:/SVN/legatodb/sapient/trunk/code/oracle/trigger","\n\t","\n\t","\n\t\t"," ","\n\t\t","-triggerBody='null'","\n\t","\n\t","\n\t\t"," ","\n\t\t"," ","-tables=P_*","\n\t","\n\t","\n\t\t"," ","\n\t\t","-isDBMS=oracle;","\n\t","\n","\n"," ","\n\n\n"]],"2":[["Logging von Tabellenänderungen"]],"3":[["SYS_CHANGE_LOG"],["Trigger"],["Aufruf aus J-LIW"]],"5":[["Log,SYS_CHANGE_LOG"]],"id":"82"})