rh._.exports({"1":[["\n"],["\n"],["\n",":","\n","Configuration \n of Apache Log4j 2 is necessary only for Tomcat version until 8. From Tomcat \n version 9, no additional code is required for switching Tomcat's internal \n logging to Log4j 2. Skip this section and move directly to ","Creating_Log4j_2_XML"," \n if you are planning for a Tomcat 9 installation."," ","\n","Apache Log4j 2 is an upgrade to Log4j that provides \n significant improvements over its predecessor, Log4j 1.x, and provides \n many of the improvements available in Logback while fixing some inherent \n problems in Logback's architecture. The following sections explains how \n to configure Tomcat to use log4j2 rather than java.util.logging for all \n Tomcat’s internal logging.","\n"],["\n","The new and improved API which is simple and powerful","\n","Powerful Configuration","\n","Size of a single log file is smaller","\n","Log analysis is easy","\n","Old log files can be archived or deleted","\n","Significant improvement in performance","\n"],["\n","Log4j provides a lot of functionality that java.util.logging \n lacks and one must keep the following points in mind before opting logj4 \n 2 for java.util.logging.","\n","A fair decision can be made very easily by examining \n the answers to three simple questions.","\n","Question One","\n","Do you anticipate a need for any of the clever handlers \n that Log4j has that JUL does not have, such as the SMTPHandler, NTEventLogHandler, \n or any of the very convenient FileHandlers?","\n","Question Two","\n","Do you see yourself wanting to frequently switch the \n format of your logging output? Will you need an easy, flexible way to \n do so? In other words, do you need Log4j's PatternLayout?","\n","Question Three","\n","Do you anticipate a definite need for the ability to \n change complex logging configurations in your applications, after they \n are compiled and deployed in a production environment? Does your configuration \n sound something like, \"Severe messages from this class get sent via \n e-mail to the support guy; severe messages from a subset of classes get \n logged to a syslog deamon on our server; warning messages from another \n subset of classes get logged to a file on network drive A; and then all \n messages from everywhere get logged to a file on network drive B\"? \n And do you see yourself tweaking it every couple of days?","\n","If you can answer yes to any of the above questions, \n go with Log4j. If you answer a definite no to all of them, JUL will be \n more than adequate and it's conveniently already included in the SDK.","\n"],["\n","Log4j 2 requires Java 6.","\n"],["\n","The first step before installing log4j 2 is to deactivate \n Tomcat internal default logging. The following steps will deactivate Tomcat \n internal default logging",".","\n","1) Delete existing JULI library tomcat-juli.jar from \n CATALINA_HOME/bin and the existing Tomcat Java Logging configuration file \n logging.properties from CATALINA_BASE/conf.","\n","2) Comment out the following lines in the server.xml \n file.","\n","<Valve className=\"org.apache.catalina.valves.AccessLogValve\" \n directory=\"logs\"","\n","prefix=\"localhost_access_log\" suffix=\".txt\"","\n","pattern=\"%h %l %u %t &quot;%r&quot; %s \n %b\" />","\n"," ","\n","Replace the following lines in the $CATALINA_HOME/catalina.sh \n file as follows.","\n","if [ -z \"$LOGGING_CONFIG\" ]; then if [ -r \n \"$CATALINA_BASE\"/conf/logging.properties ]; then LOGGING_CONFIG=\"-Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties\"","\n"," ","\n","with","\n","if [ -z \"$LOGGING_CONFIG\" ]; then if [ -r \n \"$CATALINA_BASE\"/conf/log4j2.xml ]; then LOGGING_CONFIG=\"- \n Dlog4j.configurationFile==$CATALINA_BASE/conf/log4j2.xml\"","\n"," ","\n",":","\n","Instructions assume CATALINA_HOME and CATALINA_BASE \n are separate and has the following path for e.g. CATALINA_HOME - /usr/share/tomcat7/ \n and CATALINA_BASE - /var/lib/tomcat7/","\n"],["\n"],["\n","Download Apache Log4j 2 from the ","http://logging.apache.org/log4j/2.x/download.html"," \n website.","\n",":","\n","This installation guide uses the Apache Log4j \n 2 Version 2.1.","\n","\n","Open the Zip file with your favorite unzipper and extract \n the files into a folder.","\n"],["\n","From the unzipped folder, copy the following .jar files \n to Tomcat 'lib' folder (CATALINA_HOME/lib/).","\n","log4j-core-2.1.jar","\n","log4j-api-2.1.jar","\n","log4j-jcl-2.1.jar","\n","log4j-jul-2.1.jar","\n"],["\n","\n"," ","\n","Download tomcat-juli.jar and tomcat-juli-adapters.jar \n that are available as an \"extras\" component for Tomcat from \n the Tomcat download site. This ","tomcat-juli.jar"," \n differs from the default one. It contains the full Apache Commons Logging \n implementation and thus is able to discover the presence of log4j and \n configure itself.","\n","Put tomcat-juli.jar & tomcat-juli-adapters.jar \n into $CATALINA_HOME/lib.","\n","Copy  $CATALINA_HOME/lib/tomcat-juli.jar \n to $CATALINA_HOME/bin.","\n"],["\n","Create a configuration XML file called log4j2.xml and \n append the following sample configuration to the file. Save the file into \n CATALINA_BASE/webapps/Legato/WEB-INF/classes directory.","\n","<?xml version=\"1.0\" encoding=\"UTF-8\"?>","\n","<Configuration monitorInterval=\"30\" status=\"INFO\">","\n","        <Filters>","\n","                <RegexFilter \n regex=\"(?is).*ORA-01013:.*\" useRawMsg=\"false\" onMatch=\"DENY\" \n onMismatch=\"NEUTRAL\"/>","\n","                <MarkerFilter \n marker=\"exceptions\"     onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"init\"           onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"SQL\"            onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"Query\"          onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"VisuPolling\"    onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"AlarmPolling\"   onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"VisuRefresh\"    onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"AlarmRefresh\"   onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"VisuCompiler\"   onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"LegatoState\"    onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"DbCache\"        onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"WebServiceCall\" onMatch=\"NEUTRAL\" onMismatch=\"NEUTRAL\" \n />","\n","                <MarkerFilter \n marker=\"MesTermMsg\"     onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"MesTermErr\"     onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"Other\"          onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","                <MarkerFilter \n marker=\"Paging\"         onMatch=\"NEUTRAL\" \n onMismatch=\"NEUTRAL\" />","\n","        </Filters>","\n","      <Appenders>","\n","<!--","\n","                <Servlet \n name=\"server\">","\n","                         <PatternLayout \n charset=\"UTF-8\">","\n","                                   <Pattern>[%marker] \n %-5level %logger{1} - %message%throwable</Pattern>","\n","                         </PatternLayout>","\n","                </Servlet>","\n","-->","\n","                <RollingRandomAccessFile \n name=\"logfile\"","\n","                                   fileName=\"/var/log/tomcat7/webapp.log\" \n filePattern=\"/var/log/tomcat7/webapp.%d.log\"","\n","                                   immediateFlush=\"false\" \n append=\"true\">","\n","                         <Policies>","\n","                                   <OnStartupTriggeringPolicy \n />","\n","                                   <SizeBasedTriggeringPolicy \n size=\"10 MB\" />","\n","                         </Policies>","\n","                         <DefaultRolloverStrategy \n min=\"1\" max=\"9\" />","\n","                         <PatternLayout \n charset=\"UTF-8\">","\n","                                   <Pattern>%date{DEFAULT} \n [%marker] %-5level %logger{1} - %message%n%throwable</Pattern>","\n","                         </PatternLayout>","\n","                </RollingRandomAccessFile>","\n","                <RollingRandomAccessFile \n name=\"errfile\"","\n","                                   fileName=\"/var/log/tomcat7/webapperr.log\" \n filePattern=\"/var/log/tomcat7/webapp.err.%d.log\"","\n","                                   immediateFlush=\"false\" \n append=\"true\">","\n","                         <ThresholdFilter \n level=\"WARN\" onMatch=\"ACCEPT\" onMismatch=\"DENY\" \n />","\n","                         <Policies>","\n","                                   <SizeBasedTriggeringPolicy \n size=\"10 MB\" />","\n","                         </Policies>","\n","                         <DefaultRolloverStrategy \n min=\"1\" max=\"9\" />","\n","                         <PatternLayout \n charset=\"UTF-8\">","\n","                                   <Pattern>%date{DEFAULT} \n [%marker] %-5level %logger{1} - %message%n%throwable</Pattern>","\n","                         </PatternLayout>","\n","                </RollingRandomAccessFile>","\n","      </Appenders>","\n","      <Loggers>","\n","                <AsyncRoot \n level=\"trace\" includeLocation=\"false\">","\n","<!--","\n","                        <AppenderRef \n ref=\"server\" />","\n","-->","\n","                        <AppenderRef \n ref=\"logfile\" />","\n","                         <AppenderRef \n ref=\"errfile\" level=\"WARN\"/>","\n","                </AsyncRoot>","\n","                <AsyncLogger \n name=\"de.gefasoft.legato.webapp.util.db.QueryWaitWatcher\" level=\"warn\"/>","\n","      </Loggers>","\n","</Configuration>","\n"," ","\n",":","\n","The \n above log4j 2 xml configuration is just a simple configuration using Rolling \n File Appender which creates a log file when the size of the file reaches \n 10 MB using the SizeBasedTriggeringPolicy."," For more complex \n configuration please read the Apache Log4j 2 Documentation (","PDF",") \n – Section ","\"","Appenders","\".","\n","In the above example log4j2.xml, the Parameters filename, \n filePattern, layout, name, policy were used.","\n","1. name=\"logfile\" - used to specify \n a name to the Appender","\n","2. fileName=\"/var/log/tomcat7/webapp.log\" \n - used to specify the path to the log file. In the example, the log file \n is named as tomcat.log.","\n","3. filePattern=\"webapp.%d.log\"> - \n used to append a date/time pattern, in our case a date pattern (%d) to \n the end of the archived file.","\n","4. <PatternLayout><pattern> [%-5level] \n %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n</pattern></PatternLayout> \n - used to specify the format of the LogEvent.","\n","[%-5level] - Shows messages classified as DEBUG, \n INFO, WARNING, ERROR, and FATAL","\n","%d {yyyy-MM-dd HH:mm:ss.SSS} - Outputs the date \n of the logging event. The date conversion specifier may be followed by \n a set of braces containing a date and time pattern string per ","SimpleDateFormat",". \n For eg. 2014-11-04 08:24:00.423.","\n","[%t] - Outputs the name of the thread that generated \n the logging event.","\n","%c {1} - Outputs the name of the logger that published \n the logging event. The logger conversion specifier can be optionally followed \n byprecision specifier, which consists of a decimal integer, or a pattern \n starting with a decimal integer.","\n","%msg - Outputs the application supplied message \n associated with the logging event.","\n","%n - Outputs the platform dependent line separator \n character or characters.","\n","5.      <SizeBasedTriggeringPolicy \n size=\"10 MB\" /> - The SizeBasedTriggeringPolicy causes a \n rollover once the file has reached the specified size. The size can be \n specified in bytes, with the suffix KB, MB or GB, for example 10MB.","\n","6. <Root level=\"trace\"> - Sets Root \n logger level to \"trace\". Alternatively the level may be configured \n with one of TRACE, DEBUG, INFO, WARN, ERROR, ALL or OFF. If no level is \n specified it will default to ERROR.","\n"],["\n","Restart Tomcat for the changes to take effect.","\n","Here is the output of above configuration.","\n","2015-01-12 17:54:22,713 [VisuCompiler] INFO  VisuDatabase \n - VisuDbURL: \"jdbc:hsqldb:res:de/gefasoft/legato/webapp/monitoring/svg/visudb\"","\n","2015-01-12 17:54:22,720 [VisuCompiler] INFO  VisuDatabase \n - HSQLDB Driver loaded","\n","2015-01-12 17:54:23,426 [VisuCompiler] INFO  VisuDatabase \n - HSQLDB Connection allocated","\n","2015-01-12 17:54:23,426 [VisuCompiler] INFO  VisuDatabase \n - HSQLDB set up","\n","2015-01-12 17:54:23,426 [VisuCompiler] INFO  VisuDatabase \n - Visu path set to \"/home/shares/V4DEV2DB/visu\"","\n","2015-01-12 17:54:23,883 [VisuCompiler] DEBUG VisuDatabase \n - successfully loaded Visu data object class BufferInfo","\n","2015-01-12 17:54:23,957 [VisuCompiler] DEBUG VisuDatabase \n - successfully loaded Visu data object class ChartInitData","\n","2015-01-12 17:54:24,080 [VisuCompiler] DEBUG VisuDatabase \n - successfully loaded Visu data object class EMChartsData","\n"," ","\n\n\n"]],"2":[["Configuring Apache Log4j 2 for Tomcat Internal Logging"]],"3":[["General"],["Benefits of Log4j 2"],["Which Library to Choose?"],["Requirements"],["Deactivate \n Tomcat Internal Default Logging"],["Setting up Apache Log4j 2"]],"4":[["Configuring Apache Log4j 2 for Tomcat Internal Logging"]],"6":[["Download Log4j 2"],["Copy log4j2 jar Files to Tomcat"],["Download Extra Component for Tomcat"],["Creating Log4j2 XML"],["Restart Tomcat"]],"id":"132"})