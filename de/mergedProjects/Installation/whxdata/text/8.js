rh._.exports({"0":[["Hinweise für Updates, Patches, Hotfixes"]],"1":[["\n"],["\n"],["\n",":","\n","Vor einem Update der Datenbank muss sichergestellt \n werden, dass keine User auf die Datenbank zugreifen.","\n"],["\n","Zunächst müssen die User Jobs gestoppt werden. Dies \n kann erreicht werden, indem man folgendes Skript mit SQL plus auf der \n Datenbank ausführt (sofern es sich um eine 2-DB-Installation handelt, \n muss das Skript auf beiden Datenbanken ausgeführt werden).","\n","BEGIN","\n","   FOR job_rec IN (SELECT job FROM user_jobs)","\n","   LOOP","\n","      DBMS_JOB.BROKEN(job_rec.job, \n TRUE);","\n","   END LOOP;","\n","END;","\n","/","\n"," ","\n","Nachdem das Skript ausgeführt wurde, stellen Sie sicher, \n dass auch wirklich alle Jobs geschlossen sind. Machen Sie dazu eine Abfrage \n auf user_jobs. Für alle Einträge muss unter \"next_date\" 4000 \n eingetragen sein. Ist dies nicht der Fall, lassen Sie das Skript erneut \n laufen.","\n","Außerdem muss geprüft werden, dass kein User Job mehr \n läuft, der bereits vor dem Schließen der User Jobs gestartet wurde. Verwenden \n Sie dazu folgenden Befehl:","\n","SELECT * FROM USER_JOBS WHERE THIS_DATE IS NOT NULL","\n"," ","\n","Liefert diese Abfrage Ergebnisse, so müssen weitere \n DB Jobs durch Oracle Service gestoppt werden. Häufig sind dies der Job \n SYS_REBUILD_AND_ANALYZE.","\n"],["\n","Nach dem Update der Datenbank müssen die User Jobs \n wieder freigegeben werden. Dies wird mit folgendem Skript erreicht:","\n","BEGIN","\n","   FOR job_rec IN (SELECT job FROM user_jobs)","\n","   LOOP","\n","      DBMS_JOB.BROKEN(job_rec.job, \n FALSE);","\n","   END LOOP;","\n","END;","\n","/","\n"],["\n","Vor dem Update der Datenbank muss sichergestellt werden, \n dass kein Gateway-User auf die Datenbank zugreift. Dies ist kundenspezifisch \n umzusetzen.","\n"],["\n","Nach dem Datenbank-Update kann das Gateway wieder gestartet \n werden bzw. den Gateway-Usern der Zugriff auf die Datenbank wieder erlaubt \n werden.","\n"],["\n","Vor dem Update der Datenbank muss sichergestellt werden, \n dass kein ApplicationEngine-User auf die Datenbank zugreift. Dies ist \n kundenspezifisch umzusetzen.","\n"],["\n","Nach dem Datenbank-Update kann die ApplicationEngine \n wieder gestartet werden bzw. den AE-Usern der Zugriff auf die Datenbank \n wieder erlaubt werden.","\n"],["\n","Vor dem Datenbank-Update muss die WebApplikation gestoppt \n werden. Nach jeder Änderung an System-, Context- oder Init-Parametern \n muss die WebApplikation neu gestartet werden, um die Änderungen aktiv \n zu setzen. Da die Systemparameter in der Datenbank gespeichert werden, \n muss die WebApplikation auch nach jedem Update der Datenbank bzw. nach \n der Installation eines DB-Patches oder DB-Hotfixes neu gestartet werden.","\n"],["\n","Nach dem Datenbank-Update kann die WebApplikation wieder \n gestartet werden.","\n\n\n"]],"3":[["Hinweise für Updates, Patches, Hotfixes"]],"6":[["Allgemein"],["Stoppen von Oracle-Jobs \n vor Update"],["Freigeben von Oracle-Jobs \n nach Update"],["Stoppen des Gateways \n vor Update"],["Neustart des Gateways \n nach Update"],["Stoppen der \n ApplicationEngine vor Update"],["Neustart der \n ApplicationEngine nach Update"],["Stoppen der WebApplikation \n vor Update"],["Neustart der \n WebApplikation nach Update"]],"id":"8"})