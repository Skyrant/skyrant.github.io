rh._.exports({"0":[["Inspector / Properties"]],"1":[["\n"],["\n","Das Fenster Properties bietet eine Möglichkeit, für \n das aktuell selektierte Objekt Einstellungen vorzunehmen.","\n","Ist kein Objekt selektiert, werden die Properties der \n Grafik angezeigt und können geändert werden.","\n","Sind mehrere Objekte selektiert, werden nur gemeinsam \n genutzte Attribute in den Properties angezeigt. Attribute, die nur von \n einem Element genutzt werden können, sind in dieser Liste nicht aufgeführt. \n Vorgenommene Änderungen werden an alle selektierten Objekte weitergereicht.","\n"],["\n","Dieser Karteireiter listet die für ein Element verfügbaren \n Attribute auf. Diese können direkt in der Liste bearbeitet werden. Der \n Name der Attribute richtet sich nach der w3c-Spezifikation von SVG und \n Einträge sind entsprechend den Wertvorgaben zu treffen. Eine Beschreibung \n der Attribute ist unter \"Allgemein/Das SVG-Format/Attribute\" ersichtlich.","\n","IDs werden beim Zeichnen von Elementen automatisch \n generiert. Diese Bezeichnung kann jedoch manuell beeinflusst werden. Dabei \n ist zu beachten, dass eine ID nur einmal in einem SVG-Dokument vorkommen \n darf. Das Programm vermeidet doppelte Einträge automatisch durch Anhängen \n von\"_1\". Ist die Option \"Ensure element IDs conforming to the XML \n standard\" in den \"Preferences\" aktiviert, so wird die ID \n entsprechend geändert, wenn ein ungültiges Zeichen eingegeben wird (z.B. \n Prüfung ","à"," Pr_fung). Es erscheint \n ein Logeintrag mit einem entsprechenden Hinweis. Erlaubt sind 'A'..'Z', \n 'a'..'z', '0'..'9', '_', '-', '.'. Nicht erlaubt sind Umlaute, Sonderzeichen, \n Leerzeichen. Außerdem darf die ID nicht mit einer Zahl beginnen.","\n","Das Attribut \"Display\" steuert die Sichtbarkeit eines \n Elementes im späteren Dokument. Im Designer bleiben Elemente, die auf \n nicht sichtbar geschaltet wurden, weiterhin sichtbar.","\n","Farbattribute wie \"Fill\" und \"Stroke\" werden standardmäßig \n in RGB geschrieben. Es ist ebenfalls möglich, für eine Farbe das entsprechende \n Farbwort bzw. den hexadezimalen Wert einzugeben. Der GefasoftDesigner \n setzt, sofern vorhanden, diesen Wert in das RGB-Format um.","\n","Da nicht alle möglichen Attribute des SVG Standards \n unterstützt werden, gibt es zu jedem Objekt das Style-Attribut. Dort können \n dem GefasoftDesigner unbekannte Attribute geschrieben werden. Diese werden \n im Designer ignoriert, in der Preview bzw. IE aber umgesetzt. Attribute, \n die interpretiert werden können (z.B. fill) werden automatisch umgesetzt \n und aus dem Style entfernt.","\n","Es können auch Style-Attribute für das Root-Element \n definiert werden. Wird hier eine Hintergrundfarbe festgelegt (background: \n rgb(00,128,00)), so wird der Hintergrund der Zeichenfläche entsprechend \n eingefärbt. Es werden hierfür nur Farbangaben in der Form \"rgb(00,128,00)\" \n berücksichtigt.","\n","Ein Sonderfall ist mit S","trokeDashArray"," implementiert. \n Dieses Attribut ermöglicht eine Strichelung von Linien. Diese Eigenschaft \n wird als Standardattribut angeführt, kann jedoch vom Designer nicht korrekt \n interpretiert werden. Der Designer stellt bei einer Eingabe eine Linie \n gestrichelt dar, wobei diese Strichelung nicht der tatsächlichen Darstellung \n in SVG entspricht, sondern nur zur Informationen dient.","\n","Im Attribut \"Transform\" sind zurzeit nur Matrix-Transformationen \n erlaubt. Sind andere Transformationen gewünscht, müssen diese direkt im \n Sourcecode eingegeben werden.","\n","Für die Elemente Line und Polyline werden unter \"Other\" \n zusätzlich die Attribute MarkerEnd und MarkerStart angeboten. Hier kann \n aus einer Dropdown-Liste ein Kreis (url(#markerCircle)) oder ein Pfeil \n (url(#markerArrow)) selektiert werden. Dieses Element wird dann als End- \n oder Startpunkt der Linie angezeigt. Dieser Marker wird in der Zeichenoberfläche \n nicht angezeigt, sondern nur in der Vorschau und natürlich im Browser.","\n"],["\n","Der Eintrag \"Text\" ermöglicht es, den eingegebenen \n Text zu ändern.","\n","Über den \"TextAnchor\" wird festgelegt, wo der Text \n aufgehängt wird.","\n"],["\n","Ein Pie wird durch Nutzung des Path Elements realisiert. \n Jedoch wird die volle Komplexität nicht durch den Designer unterstützt.","\n"," ","\n","\n\t","\n\t\t","Attribut","\n\t\t","Beschreibung","\n\t","\n\t","\n\t\t","CX","\n\t\t","X-Position \n\t\t des Mittelpunktes des Kreissegments.","\n\t","\n\t","\n\t\t","CY","\n\t\t","Y-Position \n\t\t des Mittelpunktes des Kreissegments.","\n\t","\n\t","\n\t\t","RX","\n\t\t","X \n\t\t Radius.","\n\t","\n\t","\n\t\t","RY","\n\t\t","Y-Radius.","\n\t","\n\t","\n\t\t","Path","\n\t\t","Read-only \n\t\t Feld, das den späteren Path darstellt, der sich aus den Angaben \n\t\t errechnet.","\n\t","\n\t","\n\t\t","RotateAngle","\n\t\t","Drehung \n\t\t des Kreises um den Mittelpunkt.","\n\t","\n\t","\n\t\t","SegmentAngle","\n\t\t","Öffnungswinkel \n\t\t des Kreissegments.","\n\t","\n","\n"," ","\n"],["\n","In diesem Reiter können dem selektierten Objekt Dynamiken \n für das Legato-System zugeordnet werden. Dieser Punkt ist unter dem Hauptkapitel \n Dynamics erläutert.","\n"],["\n","Die Liste stellt mögliche JavaScript-Events dar. Zu \n jedem Event können JavaScript-Funktionen eingegeben werden, die ausgeführt \n werden, wenn das Event eintrifft. Beispiele hierzu sind im Hauptkapitel \n Events aufgeführt.","\n","\n\t"," ","\n","\n\n\n"]],"2":[["Inspector / Properties"]],"3":[["Inspector / Properties"]],"4":[["Properties"],["Dynamics"],["Events"]],"5":[["Text Attribute"],["Pie Attribute"]],"id":"21"})