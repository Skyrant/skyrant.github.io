<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.10";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey_adj/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" data-condition="Others:Deutsch"/>
<meta name="OriginalFile" content="GW_de_form.docx" data-condition="Others:Deutsch"/>
<meta http-equiv="Content-Language" content="de-DE" data-condition="Others:Deutsch"/>
<meta name="condition-tags" content="Others:Deutsch" data-condition="Others:Deutsch"/>
<meta name="generator" content="Adobe RoboHelp 2020" data-condition="Others:Deutsch"/>
 <meta name="topic-status" content="Abgeschlossen" data-condition="Others:Deutsch"/>
<title data-condition="Others:Deutsch">Scripten</title>
<link rel="stylesheet" href="../../assets/css/Legato_Systemdokumentation.css" type="text/css" data-condition="Others:Deutsch"/>
<style type="text/css" data-condition="Others:Deutsch">/*<![CDATA[*/
body {
	background-color: #ffffff;
}
A:visited {
	
}
A:link {
	
}
/*]]>*/</style>
<meta name="rh-index-keywords" content="Script" data-condition="Others:Deutsch"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Scripten">
        <span>Scripten</span>
      </div>
      <div class="gotohome" title="Hier klicken, um die Seite im Kontext zu sehen">
        <span>Hier klicken, um die Seite im Kontext zu sehen</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



<h2 data-condition="Others:Deutsch">Scripten</h2>
<h3 data-condition="Others:Deutsch"><a id="Überblick"></a>Überblick</h3>
<p class="BodyText" data-condition="Others:Deutsch">Scripten stellen eines der wichtigsten Elemente im 
 Cloud Connector dar, da in den meisten Fällen eine einfache Rangierung 
 von Werten nicht ausreichend ist. In Scripten können vielfältige Umrechnungen, 
 Verteilungen auf mehrere Ziele, Aktivierungen von Elementen etc. projektiert 
 werden.</p>
<h3 data-condition="Others:Deutsch"><a name="Anlegen_von_Scriptelementen" id="Anlegen_von_Scriptelementen"></a>Anlegen 
 von Scriptelementen</h3>
<p class="BodyText" data-condition="Others:Deutsch">Selektieren Sie das Grundelement &quot;Script&quot; 
 im Projektbaum und wählen Sie im Kontextmenü den Befehl &quot;Neues Element&quot; 
 - &quot;Script&quot;. Es erscheint folgender Dialog:</p>
<p class="BodyText" data-condition="Others:Deutsch"><img src="../../SCC_Dateien/Script.png" alt="" border="0"/></p>
<p class="BodyText" data-condition="Others:Deutsch">Scripten können über &quot;Ordner&quot; in logische 
 Strukturen gegliedert werden. Ein Ordner kann andere Ordner oder Scripten 
 enthalten.</p>
<h3 data-condition="Others:Deutsch"><a name="Eigenschaften_von_Scripten" id="Eigenschaften_von_Scripten"></a>Eigenschaften 
 von Scripten</h3>
<p class="BodyText" data-condition="Others:Deutsch">Der Name ist frei wählbar.</p>
<p class="Textkörperfett" data-condition="Others:Deutsch"><img src="../../assets/images/02_Hinweis_de2.jpg" style="border: none;" alt="" border="0"/>:</p>
<p class="TextkörperHinweis" data-condition="Others:Deutsch">Für den Namen gibt es keine Namenskonvention, 
 es ist beispielsweise auch möglich, einen Namen mit Leerzeichen, Plus 
 (+) oder Minus (-) zu vergeben. Allerdings werden diese Zeichen bei der 
 Verwendung in einem Script nicht richtig erkannt, da der Scanner eine 
 Trennung bei diesen Zeichen durchführt. Es sollte also im Namen auf diese 
 Zeichen verzichtet werden. Alternativ kann die Variable im Script in doppelte 
 Hochkommata gestellt werden, z.B. &quot;Value.Ich bin eine Variable&quot;.</p>
<p class="BodyText" data-condition="Others:Deutsch">Der Typ des Scripts entspricht dem Typ des Rückgabewerts 
 des Scripts, der z.B. im aufrufenden Script ausgewertet werden soll.</p>
<table class="SimpleGridBlack" cellspacing="0" style="border-collapse:collapse;" width="100%" cellpadding="1" data-condition="Others:Deutsch">
	<tbody><tr class="t1Row">
		<td style="vertical-align: top;" width="151"><p class="TabellenÜberschrift">Typ</p></td>
		<td style="vertical-align: top;" width="383"><p class="TabellenÜberschrift">Erklärung</p></td>
	</tr>
	<tr class="t2Row">
		<td style="vertical-align: top;" width="151"><p class="TabellenInhalt">&lt;Null&gt;</p></td>
		<td style="vertical-align: top;" width="383"><p class="TabellenInhalt">Das 
		 Script gibt keinen Wert zurück</p></td>
	</tr>
	<tr class="t1Row">
		<td style="vertical-align: top;" width="151"><p class="TabellenInhalt">Bool 
		 / Int / Double / String / Block/ Handle / Pointer</p></td>
		<td style="vertical-align: top;" width="383"><p class="TabellenInhalt">Das 
		 Script gibt einen Wert des angegebenen Typs zurück</p>
		<p class="TabellenInhalt">Erhält das Script einen Typ, <b>muss</b> 
		 das Script mit einer &quot;Return&quot;-Anweisung beendet werden</p></td>
	</tr>
</tbody></table>
<p class="BodyText" data-condition="Others:Deutsch"> </p>
<p class="Textkörperfett" data-condition="Others:Deutsch">Parameter:</p>
<p class="BodyText" data-condition="Others:Deutsch">Das Script kann Parameter erhalten, die dem Script 
 beim Aufruf übergeben werden. Mit den Schaltern &quot;Nach oben&quot;, 
 &quot;nach unten&quot;, &quot;Bearbeiten&quot;, &quot;Hinzufügen&quot; 
 und &quot;Entfernen&quot; kann die Parameterliste verändert werden. Die 
 Namen der Parameter müssen eindeutig sein.</p>
<p class="BodyText" data-condition="Others:Deutsch">Parameter sind von einem der Typen Bool / Int / Double 
 / String / Block / Handle / Pointer.</p>
<p class="BodyText" data-condition="Others:Deutsch"> </p>
<p class="Textkörperfett" data-condition="Others:Deutsch">TIPP:</p>
<p class="TextkörperHinweis" data-condition="Others:Deutsch">Es ist hilfreich, im Parameternamen standardisierte 
 Zeichenfolgen zu integrieren, die den Parameter-Typ bezeichnen, z.B. &quot;_&quot; 
 + &lt;vartype&gt; + name (Typen: integer: &quot;_n&quot;, bool: &quot;_b&quot;, 
 double: &quot;_dft&quot;, block: &quot;_blk&quot;, string: &quot;_sz&quot;). 
 Dadurch kann man den Parameter-Typ auch im Script-Editor sofort erkennen.</p>


</body></html>