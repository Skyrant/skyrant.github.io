rh._.exports({"0":[["Scripten"]],"1":[["\n"],["\n"],["\n","Scripten stellen eines der wichtigsten Elemente im \n Cloud Connector dar, da in den meisten Fällen eine einfache Rangierung \n von Werten nicht ausreichend ist. In Scripten können vielfältige Umrechnungen, \n Verteilungen auf mehrere Ziele, Aktivierungen von Elementen etc. projektiert \n werden.","\n"],["\n","Selektieren Sie das Grundelement \"Script\" \n im Projektbaum und wählen Sie im Kontextmenü den Befehl \"Neues Element\" \n - \"Script\". Es erscheint folgender Dialog:","\n","\n","Scripten können über \"Ordner\" in logische \n Strukturen gegliedert werden. Ein Ordner kann andere Ordner oder Scripten \n enthalten.","\n"],["\n","Der Name ist frei wählbar.","\n",":","\n","Für den Namen gibt es keine Namenskonvention, \n es ist beispielsweise auch möglich, einen Namen mit Leerzeichen, Plus \n (+) oder Minus (-) zu vergeben. Allerdings werden diese Zeichen bei der \n Verwendung in einem Script nicht richtig erkannt, da der Scanner eine \n Trennung bei diesen Zeichen durchführt. Es sollte also im Namen auf diese \n Zeichen verzichtet werden. Alternativ kann die Variable im Script in doppelte \n Hochkommata gestellt werden, z.B. \"Value.Ich bin eine Variable\".","\n","Der Typ des Scripts entspricht dem Typ des Rückgabewerts \n des Scripts, der z.B. im aufrufenden Script ausgewertet werden soll.","\n","\n\t","\n\t\t","Typ","\n\t\t","Erklärung","\n\t","\n\t","\n\t\t","<Null>","\n\t\t","Das \n\t\t Script gibt keinen Wert zurück","\n\t","\n\t","\n\t\t","Bool \n\t\t / Int / Double / String / Block/ Handle / Pointer","\n\t\t","Das \n\t\t Script gibt einen Wert des angegebenen Typs zurück","\n\t\t","Erhält das Script einen Typ, ","muss"," \n\t\t das Script mit einer \"Return\"-Anweisung beendet werden","\n\t","\n","\n"," ","\n","Parameter:","\n","Das Script kann Parameter erhalten, die dem Script \n beim Aufruf übergeben werden. Mit den Schaltern \"Nach oben\", \n \"nach unten\", \"Bearbeiten\", \"Hinzufügen\" \n und \"Entfernen\" kann die Parameterliste verändert werden. Die \n Namen der Parameter müssen eindeutig sein.","\n","Parameter sind von einem der Typen Bool / Int / Double \n / String / Block / Handle / Pointer.","\n"," ","\n","TIPP:","\n","Es ist hilfreich, im Parameternamen standardisierte \n Zeichenfolgen zu integrieren, die den Parameter-Typ bezeichnen, z.B. \"_\" \n + <vartype> + name (Typen: integer: \"_n\", bool: \"_b\", \n double: \"_dft\", block: \"_blk\", string: \"_sz\"). \n Dadurch kann man den Parameter-Typ auch im Script-Editor sofort erkennen.","\n\n\n"]],"2":[["Scripten"]],"4":[["Überblick"],["Anlegen \n von Scriptelementen"],["Eigenschaften \n von Scripten"]],"5":[["Script"]],"id":"24"})