rh._.exports({"0":[["Tabellenfunktionen für die interne Datenbank"]],"1":[["\n"],["\n","Der Cloud Connector verwendet für die interne Datenbank \n dBase-kompatible Dateistrukturen. Die Tabellen können auf der Festplatte \n gespeichert werden oder im Hauptspeicher angelegt werden. Wird die Datei \n im Hauptspeicher angelegt, gehen die Daten nach Programmende verloren. \n Ob eine Datei im Speicher oder auf der Festplatte angelegt wird, kann \n durch den Namen bestimmt werden. Eine Datei im Speicher beginnt bei Windows \n mit dem Pfad '","$MEM\\","', bei Linux/Unix/AIX mit dem Pfad '","$MEM/","'.","\n","Für die Tabellenfunktionen kann in einem Script eine \n Variable vom Typ DBTBL deklariert werden. Alle Tabellenfunktionen werden \n dann mit dem Namen der Variablen, einem Punkt und dem Namen der Funktion \n gemeinsam angesprochen.","\n","Beispiel",":","\n","dbtbl    tbl","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Append(dbrec record)","\n","Hängt einen neuen Datensatz ans Ende der Datei und \n schreibt den Inhalt des Recordpuffers ","record"," in den Datensatz.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","ok := tbl.append(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Bufopen(dbrec record)","\n","Öffnet den Recordpuffer ","record"," und ordnet diesen \n der Tabelle zu.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","ok := tbl.append(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.close","\n","Schließt die Datei. Die Tabellenvariable wird auf den \n Wert NULL gesetzt. Alle weiteren Zugriffe, die vor einem \"Open\" \n ausgeführt werden, liefern einen Fehler.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","ok := tbl.append(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Create(string name, string \n descr)","\n","Erzeugt eine neue Datei. Beginnt der ","name"," mit \n '","$MEM\\","'  wird die Datei nur im Hauptspeicher angelegt.","\n","Die Struktur der Datei wird durch ","descr"," festgelegt. \n Dabei werden die Feldbeschreibungen durch Semikolon getrennt. Eine Feldbeschreibung \n besteht aus Feldname (max. 10 Zeichen), Feldtyp und optional Nachkommastellen \n bei numerischen Feldern. Die möglichen Feldtypen sind:","\n","\n\t","\n\t\t","Feldtyp","\n\t\t","Beschreibung","\n\t\t","Feldlänge","\n\t\t","Nachkomma","\n\t","\n\t","\n\t\t","C","\n\t\t","Alphanumerisch","\n\t\t","1 \n\t\t - 255","\n\t\t","-","\n\t","\n\t","\n\t\t","N","\n\t\t","Numerisch","\n\t\t","1 \n\t\t - 19","\n\t\t","max. \n\t\t Feldlänge - 2","\n\t","\n\t","\n\t\t","D","\n\t\t","Datum","\n\t\t","8","\n\t\t","-","\n\t","\n\t","\n\t\t","L","\n\t\t","Logikfeld","\n\t\t","1","\n\t\t","-","\n\t","\n","\n"," ","\n","Die Funktion liefert true, wenn sie korrekt ausgeführt \n werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.create('$MEM\\\\List.dbf', 'Name,C,10;Value,N,6,2;Date,D,8')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","ok := tbl.append(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.delete","\n","Kennzeichnet den aktuellen Satz als gelöscht. Der Satzzeiger \n muss zuvor mit \"Goto\", \"First\", \"Last\", \n \"Next\" oder \"Prev\" richtig positioniert werden. Ein \n endgültiges Löschen des Datensatzes wird erst durch Aufruf der Funktion \n \"Pack\" durchgeführt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.goto(4)","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.first","\n","Der Satzzeiger wird auf den ersten Satz gestellt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.first","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.goto(long recnr)","\n","Der Satzzeiger wird auf den Satz ","recnr"," gestellt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.goto(4)","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Get(dbrec record)","\n","Liest den aktuellen Satz ","record"," aus der Datei \n in den Recordpuffer ein. Der Satzzeiger muss zuvor mit \"Goto\", \n \"First\", \"Last\", \"Next\" oder \"Prev\" \n richtig positioniert werden.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","tbl.get(rec)","\n","s := rec.ascii(1)","\n","rec.ascii(1) := '123'","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.GetNumIdx(dbrec record,","\n                                  long  field,","\n                                  long  num)","\n","\n","Sucht den ersten Satz, dessen numerischer Wert im Feld \n ","field"," dem Wert ","num"," entspricht. Wurde ein Satz gefunden, \n wird er aus der Datei in den Recordpuffer ","record"," eingelesen. Da \n es sich dabei um eine Indexfunktion handelt, kann sie nur ausgeführt werden, \n wenn zuvor die Funktion \"SetIndex\" für das Feld aufgerufen wurde.","\n","Es wird empfohlen, \"SetIndex\" vor jedem Aufruf \n von \"GetNumIdx\" auszuführen (siehe Beispiel).","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n",":","\n","Diese Funktion sollte nur verwendet werden, \n wenn die Daten sich nicht oft ändern. Ansonsten wird die Abfrage zu häufig \n durchgeführt, was zu Performance-Einschränkungen führen kann. In diesen \n Fällen sollte besser \"GetNumKey\" verwendet werden.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","tbl.setindex(1)","\n","tbl.getnumidx(rec, 1, 23)","\n","s := rec.ascii(2)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.GetNumKey(dbrec record,","\n                                  long  field,","\n                                  long  num)","\n","\n","Sucht den ersten Satz, dessen numerischer Wert im Feld \n ","field"," dem Wert  ","num"," entspricht. Wurde ein Satz \n gefunden, wird er aus der Datei in den Recordpuffer ","record"," eingelesen.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","if tbl.getnumkey(rec, 1, 23)then","\n","  s := rec.ascii(2)","\n","endif","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.GetStrIdx(dbrec  record,","\n                                  long   field,","\n                                  string \n str)","\n","\n","Sucht den ersten Satz, dessen alphanumerischer Wert \n im Feld ","field"," dem String ","str"," entspricht. Wurde ein Satz \n gefunden, wird er aus der Datei in den Recordpuffer ","record"," eingelesen. \n Da es sich dabei um eine Indexfunktion handelt, kann sie nur ausgeführt \n werden, wenn zuvor die Funktion \"SetIndex\" für das Feld aufgerufen \n wurde.","\n","Es wird empfohlen, \"SetIndex\" vor jedem Aufruf \n von \"GetStrIdx\" auszuführen (siehe Beispiel).","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n",":","\n","Diese Funktion sollte nur verwendet werden, \n wenn die Daten sich nicht oft ändern. Ansonsten wird die Abfrage zu häufig \n durchgeführt, was zu Performance-Einschränkungen führen kann. In diesen \n Fällen sollte besser \"GetStrKey\" verwendet werden.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","tbl.setindex(1)","\n","tbl.getstridx(rec, 1, 'Search for me')","\n","s := rec.ascii(2)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.GetStrKey(dbrec  record,","\n                                  long   field,","\n                                  string \n str)","\n","Sucht den ersten Satz, dessen alphanumerischer Wert \n im Feld ","field"," dem String ","str"," entspricht. Wurde ein Satz \n gefunden, wird er aus der Datei in den Recordpuffer ","record"," eingelesen.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","if tbl.getstrkey(rec, 1, 'Search for me') then","\n","  s := rec.ascii(2)","\n","endif","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Import(string file,","\n                               string \n delim,","\n                               bool   skip)","\n","Importiert die CSV-Datei ","file"," in die Tabelle. \n ","delim"," gibt das gültige Trennzeichen an, üblicherweise Komma oder \n Semikolon. Hat ","skip"," den Wert \"true\", wird die Spaltenbeschreibung \n der CSV-Datei ignoriert und die erste Spalte der CSV-Datei dem ersten \n Feld zugeordnet usw.","\n","Wird die Spaltenbeschreibung verwendet, wird nach gleichnamigen \n Feldern gesucht und nur die Daten übernommen, deren Spaltenbeschreibung \n einem Feldnamen entspricht.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.create('$MEM\\\\alist1.dbf',","\n","           'Operand,C,10;'   +","\n","           'Symbolik,C,10;'  +","\n","           'Text,C,40;'      +","\n","           'Klasse,N,3;'     +","\n","           'Art,C,40;'       +","\n","           'Funk,C,1')","\n","ok := tbl.import('C:\\\\files\\\\alarms1.csv', ',', \n false)","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Insert(dbrec record)","\n","Fügt einen neuen Datensatz an die aktuelle Position \n ein und schreibt den Inhalt des Recordpuffers ","record"," in den Datensatz. \n Der Satzzeiger muss zuvor mit \"Goto\", \"First\", \"Last\", \n \"Next\" oder \"Prev\" richtig positioniert werden.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","tbl.first","\n","ok := tbl.insert(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.last","\n","Der Satzzeiger wird auf den letzen Satz gestellt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.last","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.next","\n","Der Satzzeiger wird auf den nächsten Satz gestellt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","ok := tbl.first","\n","while ok do","\n","  ok := tbl.next","\n","enddo","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: long dbtbl.nrecs","\n","Liefert die Anzahl der vorhandenen Datensätze.","\n","Beispiel",":","\n","dbtbl    tbl","\n","long     q","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","q := tbl.nrecs","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.open(string File)","\n","Öffnet eine vorhandene Datei ","File",".","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.first","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Pack","\n","Alle zuvor mit \"Delete\" zum Löschen gekennzeichneten \n Datensätze werden endgültig aus der Datei gelöscht. Die weiter hinten \n liegenden Datensätze rücken nach vorne.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.first","\n","ok := tbl.delete","\n","tbl.pack","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.prev","\n","Der Satzzeiger wird auf den vorhergehenden Satz gestellt.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","ok := tbl.last","\n","while ok do","\n","  ok := tbl.prev","\n","enddo","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.recisdeleted","\n","Beim Löschen eines Datensatzes mit Delete wird dieser \n nur als gelöscht gekennzeichnet. Ein endgültiges Löschen des Datensatzes \n wird erst durch Aufruf der Funktion \"Pack\" durchgeführt. Durch \n die Funktion RecIsDeleted kann abgefagt werden, ob der betreffende Satz \n schon als gelöscht gekennzeichnet wurde.","\n","Der Satzzeiger muss zuvor mit \"Goto\", \"First\", \n \"Last\", \"Next\" oder \"Prev\" richtig positioniert \n werden.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.goto(4)","\n","if tbl.reisdeleted then","\n","  debug('Dieser Satz wurde als gelöscht \n gekennzeichnet')","\n","endif","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: long dbtbl.recnum","\n","Liefert die Nummer des aktuellen Satzes (Position des \n Satzzeigers).","\n","Beispiel",":","\n","dbtbl    tbl","\n","long     num","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","ok  := tbl.last","\n","num := tbl.recnum","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.resident","\n","Lässt eine im Hauptspeicher angelegte Datei auch nach \n dem Schließen im Speicher. Sie kann danach auch von anderen Scripten wieder \n geöffnet werden. Die Daten bleiben bis Beendigung des Cloud Connectors \n oder bis zum Schließen des Projekts erhalten.","\n","Beispiel",":","\n","dbtbl    tbl","\n","long     anz","\n","bool     ok","\n","tbl.create('$MEM\\\\alist1.dbf',","\n","           'Operand,C,10;'   +","\n","           'Symbolik,C,10;'  +","\n","           'Text,C,40;'      +","\n","           'Klasse,N,3;'     +","\n","           'Art,C,40;'       +","\n","           'Funk,C,1')","\n","tbl.resident","\n","tbl.zap","\n","ok := tbl.import('C:\\\\files\\\\alarms1.csv', ',', \n false)","\n","tbl.close","\n","tbl.open('$MEM\\\\alist1.dbf')","\n","anz := tbl.nRecs","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.ResidentEx(long type)","\n","Lässt eine im Hauptspeicher angelegte Datei auch nach \n dem Schließen im Speicher. Sie kann danach auch von anderen Scripten wieder \n geöffnet werden. Die Daten bleiben je nach ","type"," erhalten:","\n","\n\t","\n\t\t","Wert \n\t\t (type)","\n\t\t","Beschreibung","\n\t","\n\t","\n\t\t","0","\n\t\t","Tabelle \n\t\t nicht resident","\n\t","\n\t","\n\t\t","1","\n\t\t","Tabelle \n\t\t bis Projektende resident","\n\t","\n\t","\n\t\t","2","\n\t\t","Tabelle \n\t\t resident bis Beendigung des Cloud Connectors oder bis zum Schließen \n\t\t des Projekts","\n\t","\n","\n"," ","\n","Beispiel",":","\n","dbtbl    tbl","\n","long     anz","\n","bool     ok","\n","tbl.create('$MEM\\\\alist1.dbf',","\n","           'Operand,C,10;'   +","\n","           'Symbolik,C,10;'  +","\n","           'Text,C,40;'      +","\n","           'Klasse,N,3;'     +","\n","           'Art,C,40;'       +","\n","           'Funk,C,1')","\n","tbl.residentEx(1)","\n","tbl.zap","\n","ok := tbl.import('C:\\\\files\\\\alarms1.csv', ',', \n false)","\n","tbl.close","\n","tbl.open('$MEM\\\\alist1.dbf')","\n","anz := tbl.nRecs","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.SetIndex(long field)","\n","Setzt einen Index auf das Feld ","field",". Eine Tabelle \n kann pro Feld einen Index haben.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","string   s","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","tbl.setindex(1)","\n","tbl.getstridx(rec, 1, 'Search for me')","\n","s := rec.ascii(2)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Update(dbrec record)","\n","Schreibt den Inhalt des Recordpuffers ","record"," \n in den aktuellen Datensatz. Der Satzzeiger muss zuvor mit \"Goto\", \n \"First\", \"Last\", \"Next\" oder \"Prev\" \n richtig positioniert werden.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","dbrec    rec","\n","bool     ok","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.bufopen(rec)","\n","rec.empty","\n","tbl.first","\n","ok := tbl.update(rec)","\n","rec.close","\n","tbl.close","\n"," ","\n"],["\n","\n","Deklaration: bool dbtbl.Zap","\n","Löscht alle Datensätze der Tabelle.","\n","Die Funktion liefert \"true\", wenn sie korrekt \n ausgeführt werden konnte.","\n","Beispiel",":","\n","dbtbl    tbl","\n","tbl.open('c:\\\\files\\\\data.dbf')","\n","tbl.zap","\n","tbl.close","\n"," ","\n\n\n"]],"2":[["Tabellenfunktionen für die interne Datenbank"]],"4":[["Append"],["Bufopen"],["Close"],["Create"],["Delete"],["First"],["Goto"],["Get"],["GetNumIdx"],["GetNumKey"],["GetStrIdx"],["GetStrKey"],["Import"],["Insert"],["Last"],["Next"],["nRecs"],["Open"],["Pack"],["Prev"],["RecIsDeleted"],["RecNum"],["Resident"],["ResidentEx"],["SetIndex"],["Update"],["Zap"]],"id":"55"})