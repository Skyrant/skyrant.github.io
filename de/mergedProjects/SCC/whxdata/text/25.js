rh._.exports({"0":[["Interne Variable"]],"1":[["\n"],["\n","Interne Variablen dienen zum Zwischenspeichern von \n Werten während der Projektlaufzeit. Werte können zwar auch in Scripten \n gespeichert werden (als \"static\" deklariert), diese sind jedoch \n nicht von anderen Elementen aus ansprechbar.","\n"],["\n","Standardmäßig ist der Knoten \"Value\" für \n interne Variablen vorgesehen. Es können auch interne Variablen parallel \n zu OPC- bzw. OPC_UA-Items im entsprechenden Knoten angelegt werden. Wählen \n Sie im Kontextmenü den Befehl \"Neues Element\" - \"Variable\".","\n","\n",":","\n","Für den Namen gibt es keine Namenskonvention, \n es ist beispielsweise auch möglich, einen Namen mit Leerzeichen, Plus \n (+) oder Minus (-) zu vergeben. Allerdings werden diese Zeichen bei der \n Verwendung in einem Script nicht richtig erkannt, da der Scanner eine \n Trennung bei diesen Zeichen durchführt. Es sollte also im Namen auf diese \n Zeichen verzichtet werden. Alternativ kann die Variable im Script in doppelte \n Hochkommata gestellt werden, z.B. \"Value.Ich bin eine Variable\".","\n","Die Variable wird mit dem unter \"Initialisierung\" \n angegebenen Wert vorbelegt. Bei Variablen vom Typ \"Datenblock\" \n kann eine Anzahl von Wiederholungen angegeben werden, um einen entsprechend \n großen Block zu erzeugen. Diese Vorbelegung wird entweder einmalig nach \n dem Laden des Projekts oder bei jedem Start des Projekts ausgeführt. Dies \n wird durch den Parameter \"Init bei jedem Projektstart\" festgelegt. \n Bei der Initialisierung wird bereits eine Reaktion ausgelöst.","\n","Der Variable kann eine Reaktion vom Type OnValue hinzugefügt \n werden.","\n\n\n"]],"2":[["Interne Variable"]],"4":[["Anlegen \n einer Variable"]],"id":"25"})