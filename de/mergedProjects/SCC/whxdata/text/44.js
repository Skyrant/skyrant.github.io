rh._.exports({"0":[["Datums- und Uhrzeitfunktionen"]],"1":[["\n"],["\n"],["\n","\n","Deklaration: string ConvTimeStr(string time, string \n format1, string format2)","\n","Die Funktion konvertiert den Zeitstring ","time"," \n im ","format1"," in einen neuen Zeitstring vom ","format2",".","\n","Beispiel",":","\n","string   t1,t2","\n","t1 := timestr('YYYY-MM-DD HH:mm:ss')","\n","t2 := convtimestr(t1, 'YYYY-MM-DD HH:mm:ss', 'HH:mm:ss \n YYYY/MM/DD')","\n"," ","\n"],["\n","\n","Deklaration: string DToTime(string format, double \n time)","\n","Die Funktion rechnet den durch ","time"," vorgegebenen \n Double-Wert, der der Zeitdauer seit dem 01.01.1970 in Sekunden entspricht \n (Unix-Zeit) in einen Zeitstring um. ","format"," gibt an, wie die Zeitausgabe \n zu formatieren ist.","\n","Beispiel",":","\n","double unix","\n","string time","\n","unix := 1","\n","time := DToTime ('YYYY/MM/DD HH:mm:ss:ttt', unix)","\n"," ","\n"],["\n","\n","Deklaration: long EventAge","\n","Die Funktion liefert die Zeitspanne vom Auftreten des \n Events bis zur Bearbeitung in der Kommandoqueue (Aufruf des Scripts).","\n","Beispiel",":","\n","long age","\n","age := eventage","\n"," ","\n"],["\n","\n","Deklaration: string EventTimeStr(string Format)","\n","Die Funktion liefert einen String mit der Zeit, zu \n der ein Ereignis aufgetreten ist, im vorgegeben ","Format",". Diese Funktion \n ist vor allem in Scripten sinnvoll, deren Aufruf durch ein gepuffertes \n Ereignis ausgelöst wurde.","\n","Beispiel",":","\n","string   d","\n","d := EventTimeStr('YYYY-MM-DD HH:mm:ss')","\n"," ","\n"],["\n","\n","Deklaration: string FileTimeStr(pointer addr, string \n Format)","\n","Die Funktion konvertiert eine Zeit vom Format ","Filetime"," \n (8 Byte), die durch den Zeiger ","addr"," definiert wird, in einen String \n im vorgegeben ","Format",".","\n","Beispiel",":","\n","string   d","\n","struct fi","\n","begin","\n","  dword    dwFileAttributes","\n","  dword    ftCreationTimeHigh, \n ftCreationTimeLow","\n","  dword    ftLastAccessTimeHigh","\n","  dword    ftLastAccessTimeLow","\n","  dword    ftLastWriteTimeHigh","\n","  dword    ftLastWriteTimeLow","\n","  dword    nFileSizeHigh","\n","  dword    nFileSizeLow","\n","  dword    dwReserved0","\n","  dword    dwReserved1","\n","  byte     cFileName[260]","\n","  byte     cAlternateFileName[14]","\n","end","\n","d := FileTimeStr(&fi.ftLastWriteTimeHigh, 'DD.MM.YY \n HH:mm:ss')","\n","debug(d)","\n"," ","\n"],["\n","\n","Deklaration: string LocalToUtc(string localtime)","\n","Die Funktion konvertiert den Zeitstring ","localtime"," \n von der lokalen in einen Zeitstring der UTC Zeitzone. Für beide Zeitstrings \n wird das Format 'YYYY-MM-DD HH:mm:ss' vorausgesetzt.","\n","Beispiel:","\n","string time_utc, time_local","\n","time_local := '2021-03-28 02:15:00'","\n","time_utc :=  LocalToUtc(time_local)","\n"," ","\n"],["\n","\n","Deklaration: string LToTime(string format, long \n time)","\n","Rechnet den durch ","time"," vorgegebenen Long-Wert, \n der der Zeitdauer seit dem 01.01.1970 in Sekunden entspricht (Unix-Zeit) \n in einen Zeitstring um. ","format"," gibt an, wie die Zeitausgabe zu \n formatieren ist.","\n","Beispiel",":","\n","long     unix","\n","string   time","\n","unix := 1","\n","time := LToTime('YYYY/MM/DD HH:mm:ss', unix)","\n"," ","\n"],["\n","\n","Deklaration: double Modf(double val)","\n","Die Funktion liefert den Wert der Nachkommastellen.","\n","Beispiel",":","\n","double d1, d2","\n","d1 := TimeDouble","\n","d2 := modf(d1)","\n"," ","\n"],["\n","\n","Deklaration: SetLocalTime(longJahr, long Monat,","\n                          long \n Tag, long Stunde,","\n                          long \n Minute,","\n                          long \n Sekunde)","\n","Die Funktion setzt die Systemzeit auf  die \n übergebenen Parameter.","\n","Beispiel",":","\n","SetLocalTime(1999,9,21,14,45,00)","\n"," ","\n"],["\n","\n","Deklaration: SetVarTime(pointer addr, long offset,","\n                        string \n format, string time)","\n","Schreibt die durch ","time"," definierte Zeit in den \n Variablenbereich des Scripts ab dem ","offset"," von der variable ","addr"," \n aus gerechnet. Es werden 6 Bytes beschrieben. ","format"," gibt an, wie \n die Zeitvorgabe zu interpretieren ist. Die Jahreszahl kann maximal zweistellig \n ausgegeben werden, auch wenn ","format"," eine vierstellige Jahreszahl \n angibt.","\n","Beispiel",":","\n","long     dummy","\n","byte     year, month, \n day, hour, minute, sec","\n","string   time","\n","time := TimeStr('YY-MM-DD HH:mm:ss')","\n","SetVarTime(&jahr, 0, 'YY-MM-DD HH:mm:ss', time)","\n","oder...","\n","SetVarTime(&dummy, 4, 'YY-MM-DD, HH:mm:ss', \n time)","\n","debug('YY: ' + LToStr(year, 10))","\n","debug('MM: ' + LToStr(month, 10))","\n","debug('DD: ' + LToStr(day, 10))","\n","debug('HH: ' + LToStr(hour, 10))","\n","debug('mm: ' + LToStr(minute, 10))","\n","debug('ss: ' + LToStr(sec, 10))","\n"," ","\n"],["\n","\n","Deklaration: long TimeDiffLocalTimeUtcTime ","\n","Die Funktion liefert die Differenz zwischen der lokalen \n Uhrzeit und der koordinierten Weltzeit (UTC) in Sekunden.","\n","Beispiel",":","\n","long   l","\n","l := TimeDiffLocalTimeUtcTime","\n"," ","\n"],["\n","\n","Deklaration: long TimeDiffUtcToLocal(string localtime)","\n","Berechnet den aktuellen Unterschied zwischen der UTC-Zeit und der lokalen \n Zeit in Sekunden für den Zeitpunkt localtime.","\n","Beispiel:","\n","string time_local","\n","long diff","\n","time_local := '2021-03-28 02:15:00'","\n","diff :=  TimeDiffUtcToLocal(time_local)","\n"," ","\n"],["\n","\n","Deklaration: double TimeDouble","\n","Die Funktion rechnet die aktuelle Zeit in einen Double-Wert \n um, der der Zeitdauer seit dem 01.01.1970 in Sekunden entspricht (Unix-Zeit). \n Die Stellen hinter dem Komma enthalten die Millisekunden.","\n","Beispiel",":","\n","double d1, d2","\n","d1 := TimeToD('YYYY/MM/DD HH:mm:ss', '2000/01/01 \n 00:00:00')","\n","d2 := TimeDouble","\n","debug('Seit dem 1.1.2000 sind '+dtostr(d2-d1, 10)+' \n Sekunde vergangen')","\n"," ","\n"],["\n","\n","Deklaration: long TimeInt","\n","Rechnet die aktuelle Zeit in einen Long-Wert um, der \n der Zeitdauer seit dem 01.01.1970 in Sekunden entspricht (Unix-Zeit).","\n","Beispiel",":","\n","long     starttime, acttime","\n","starttime := TimeToL('YYYY/MM/DD HH:mm:ss', '2000/01/01 \n 00:00:00')","\n","acttime   := TimeInt","\n","debug('Since 1.1.2000 '+","\n","      LToStr(acttime \n - starttime, 10) +","\n","      ' seconds have \n passed')","\n"," ","\n"],["\n","\n","Deklaration: string TimeStr(string Format)","\n","Die Funktion liefert einen String mit der aktuellen \n Systemzeit im vorgegeben ","Format",".","\n","Beispiel",":","\n","string   d","\n","d := TimeStr('YYYY-MM-DD HH:mm:ss')","\n","debug(d)","\n"," ","\n"],["\n","\n","Deklaration: double TimeToD(string format, string \n time)","\n","Die Funktion rechnet die durch ","time"," definierte \n Zeit in einen Double-Wert um, der der Zeitdauer seit dem 01.01.1970 in \n Sekunden entspricht (Unix-Zeit). ","format"," gibt an, wie die Zeitvorgabe \n zu interpretieren ist. Die Stellen hinter dem Komma enthalten die Millisekunden.","\n","Beispiel",":","\n","double unix","\n","string time","\n","time := TimeStr('YYYY/MM/DD HH:mm:ss:ttt')","\n","unix := TimeToD('YYYY/MM/DD HH:mm:ss:ttt', time)","\n"," ","\n"],["\n","\n","Deklaration: long TimeToL(string format, string \n time)","\n","Rechnet die durch ","time"," definierte Zeit in einen \n Long-Wert um, der der Zeitdauer seit dem 01.01.1970 in Sekunden entspricht \n (Unix-Zeit). ","format"," gibt an, wie die Zeitvorgabe zu interpretieren \n ist.","\n","Beispiel",":","\n","long     unix","\n","string   time","\n","time := TimeStr('YYYY/MM/DD HH:mm:ss')","\n","unix := TimeToL('YYYY/MM/DD HH:mm:ss', time)","\n"," ","\n"],["\n","\n","Deklaration: string UtcTimeStr(string Format) ","\n","Die Funktion liefert einen String mit der aktuellen \n koordinierten Weltzeit (UTC) im vorgegebenen ","Format",".","\n","Beispiel",":","\n","string   d","\n","d := UtcTimeStr('YYYY-MM-DD HH:mm:ss')","\n","debug(d)","\n"," ","\n"],["\n","\n","Deklaration: string UtcToLocal(string utctime)","\n","Die Funktion konvertiert den Zeitstring ","utctime"," \n von der UTC Zeit in einen Zeitstring der lokalen Zeitzone. Für beide Zeitstrings \n wird das Format 'YYYY-MM-DD HH:mm:ss' vorausgesetzt.","\n","Beispiel",":","\n","string time_utc, time_local","\n","time_utc := '2021-03-28 02:15:00'","\n","time_local :=  UtcToLocal(time_utc')","\n\n\n"]],"2":[["Datums- und Uhrzeitfunktionen"]],"4":[["ConvTimeStr"],["DToTime"],["EventAge"],["EventTimeStr"],["FileTimeStr"],["LocalToUtc"],["LToTime"],["Modf"],["SetLocalTime"],["SetVarTime"],["TimeDiffLocalTimeUtcTime"],["TimeDiffUtcToLocal"],["TimeDouble"],["TimeInt"],["TimeStr"],["TimeToD"],["TimeToL"],["UtcTimeStr"],["UtcToLocal"]],"id":"44"})