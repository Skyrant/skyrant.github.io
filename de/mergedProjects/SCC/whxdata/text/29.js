rh._.exports({"0":[["Logging (WIN64 und UNIX)"]],"1":[["\n"],["\n"],["\n","Das Logging bietet die Möglichkeit, den Ablauf eines \n Cloud Connector Projekts mitzuverfolgen und hilft, Fehler im Projekt oder \n im Datenaustausch schnell zu finden. Es wird grundsätzlich in Dateien \n geloggt.","\n","Es gibt bis zu 16 Hauptklassen mit bis zu 4 Unterklassen. \n Die erste Unterklasse stellt dabei immer Fehlermeldungen dar, die weiteren \n drei Klassen sind unterschiedlich belegt.","\n"],["\n","Die Meldung werden in eine frei wählbare Textdatei \n geschrieben, die, wenn die Meldungsanzahl nicht begrenzt wird (siehe unten), \n eine beliebige Größe erreichen kann.","\n","Jede Meldung wird im gleichen Format ausgegeben:","\n","Datum / Zeit             Benutzer           Klasse: \n Meldungstext","\n"," ","\n","Datum / Zeit im Format JJ.MM.TT HH:MM:SS:Hundertstel.","\n","Als Benutzer wird der Name des Moduls angezeigt, \n das die Meldung erzeugt hat.","\n","Die Meldeklasse der Meldung kann zwischen 0 und \n 31 liegen und gibt Auskunft über die Art der Meldung. Über die Klasse \n K00 werden z.B. Initialisierungsmeldungen beim Projektstart geloggt.","\n","Der Meldungstext wird im Klartext ausgegeben.","\n"," ","\n","Alle Zeilen haben eine einheitliche Länge und ein einheitliches \n Format. Damit wird der Import der aufgezeichneten Meldungen in andere \n Programme erleichtert (Import-Format \"ASCII fixed\").","\n","Über die Menüfunktion \"Logging | Log-Einstellungen \n Editor\" kann der Name und Speicherort der Logdatei für den Editor \n eingestellt werden. Außerdem kann über die Logmaske festgelegt werden, \n welche Klassen geloggt werden sollen. ","\n","Für den Service werden diese Angaben unter \"Datei \n | Servicekonfiguration\" vorgenommen.","\n","Außerdem gibt es unter \"Logging | Log-Einstellungen \n Service\" die Möglichkeit, die aufzuzeichnenden Klassen des Dienstes \n zu ändern, ohne den Service neu starten zu müssen.","\n"],["\n","\n","Ist in der linken Auswahlliste kein Eintrag selektiert, \n wirken die Funktionstasten auf alle Klassen. Somit können einfach alle \n Klassen an/abgewählt werden. ","\n","Ist in der linken Auswahlliste ein Eintrag selektiert, \n können rechts die Unterklassen an/abgewählt werden. Die Funktionstasten \n wirken nur auf diese Klasse.","\n"],["\n","Logdateien erhalten die Extension \".log\", \n Errorfiles die Extension \".err\". Der Name wird über den Kommandozeilenparameter \n ","–n"," angegeben. Logdateien haben eine maximale Größe von 10 MB, Errordateien \n haben eine maximale Größe von 1 MB. Pro Programminstanz werden maximal \n 20 Logdateien und 10 Errordateien auf Platte gespeichert.","\n","Beispiel:","\n","Name der Logdatei ","gw_plc",".","\n","Somit heißt die aktuelle Logdatei ","gw_plc.log",", \n die aktuelle Errordatei ","gw_plc.err",".","\n","Wenn die Größe einer Logdatei 10 MB überschreitet, \n werden die Logdateien ","gw_plc.log.n"," in ","gw_plc.log.n+1"," umbenannt \n (dto. für Errordateien beim Überschreiten der Größe von 1MB).","\n","Wenn bereits 20 Logdateien bzw. 10 Errordateien existieren, \n wird die älteste Datei gelöscht.","\n","Somit ist pro Programminstanz","\n","            20 \n * 10 MB + 10 * 1 MB = 210 MB","\n","Plattenplatz erforderlich. Dies gilt auch für die anderen \n Programminstanzen wie Telegrammhandler.","\n"],["\n","Da die Anzahl der gespeicherten Logbücher begrenzt \n ist, ist der einzusehende Zeitraum bei vielen Ereignissen relativ kurz \n (bei großen Konfigurationen im Minutenbereich). Eine eventuell notwendige \n Fehleranalyse ist dann kaum möglich.","\n","Um eine große Menge an Logdaten archivieren zu können, \n gibt es den Logfilezipper. Mit diesem werden die ältesten Logbücher komprimiert \n und in ein eigenes Verzeichnis gespeichert. Die Anzahl der komprimierten \n Logbücher kann parametriert werden.","\n","Unter Unix werden entsprechende Prozesse konfiguriert \n und vor dem Cloud Connector gestartet.","\n","Unter Windows können entsprechende Service Instanzen \n konfiguriert werden. Zum Vorgehen siehe bitte hier: ","Logfilezipper",".","\n\n\n"]],"2":[["Logging (WIN64 und UNIX)"]],"4":[["Überblick"],["Aufzeichnen \n von Meldungen in eine Logdatei"],["Logklassen"],["Logdateien"],["Logfilezipper"]],"5":[["Log"]],"id":"29"})