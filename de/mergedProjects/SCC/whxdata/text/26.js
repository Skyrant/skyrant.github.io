rh._.exports({"0":[["Ereignisse"]],"1":[["\n"],["\n","Der Cloud Connector funktioniert im Ablauf voll ereignisgesteuert. \n Solche Ereignisse werden z.B. von Wertänderungen der Variablen ausgelöst. \n Zusätzlich können jedoch auch Ereignisse wie Timer angelegt werden.","\n"],["\n","Selektieren Sie dazu das Grundelement \"Event\" \n im Projektbaum und wählen Sie im Kontextmenü den Befehl \"Neues Ereignis\". \n Der angezeigte Dialog hängt vom gewählten Typ ab.","\n","\n","Der Parameter \"Typ\" hat folgende Bedeutung:","\n"," ","\n","\n\t","\n\t\t","Typ","\n\t\t","Erklärung","\n\t","\n\t","\n\t\t","Manuell","\n\t\t","Das \n\t\t Ereignis kann nur manuell ausgelöst werden. Zum Auslösen im Kontextmenü \n\t\t des Events (rechte Maustaste auf das Event) den Eintrag \"Ausführen\" \n\t\t anklicken.","\n\t","\n\t","\n\t\t","Zyklisch","\n\t\t","Das \n\t\t Ereignis wird zyklisch ausgelöst. Das Zeitraster wird in Millisekunden \n\t\t angegeben, die dann ggf. in Std und Min gewandelt werden, um die \n\t\t Anzeige zu vereinfachen.","\n\t\t","Ist zusätzlich die Checkbox \"Mehrfacheintrag \n\t\t sperren\" aktiviert, so wird das Event nur einmal getriggert \n\t\t und danach solange gesperrt, bis das zugehörige Script abgearbeitet \n\t\t wurde. Der Timer wir dann neu aufgezogen und wieder freigegen.","\n\t","\n\t","\n\t\t","Zeittrigger","\n\t\t","Das \n\t\t Ereignis wird zu einem bestimmten Zeitpunkt ausgelöst. Es kann \n\t\t eine Uhrzeit und einer oder mehrere Wochentage angegeben werden.","\n\t","\n\t","\n\t\t","Zeitpunkt","\n\t\t","Das \n\t\t Ereignis wird zu einem einmaligen Zeitpunkt ausgeführt. Dieser \n\t\t wird mit Datum und Uhrzeit festgelegt.","\n\t","\n\t","\n\t\t","Ablaufstart","\n\t\t","Das \n\t\t Ereignis wird einmalig nach dem Projektstart ausgelöst. Es werden \n\t\t zuerst alle Variablen gestartet, danach wird das Ereignis \"Projektstart\" \n\t\t ausgelöst.","\n\t","\n\t","\n\t\t","Ablaufende \n\t\t Vorbereitung","\n\t\t","Das \n\t\t Ereignis wird einmalig vor dem Ereignis \"Ablaufende\" \n\t\t ausgelöst.","\n\t","\n\t","\n\t\t","Ablaufende","\n\t\t","Das \n\t\t Ereignis wird einmalig vor dem Projektende ausgelöst. Es wird \n\t\t zuerst das Ereignis \"Ablaufende\" ausgelöst, danach werden \n\t\t alle Variablen gestoppt.","\n\t","\n\t","\n\t\t","Grenze \n\t\t Kommandoqueue","\n\t\t","Ab \n\t\t einer bestimmten Anzahl von Kommandos in der Queue wird ein Script \n\t\t gestartet, das eine Fehlermeldung generiert. Bei Kommend wird \n\t\t das Event bei Überschreitung des eingegebenen Schwellenwerts ausgelöst, \n\t\t bei Gehend bei Unterschreitung.","\n\t\t","Um ein zu häufiges Generieren des Ereignisses \n\t\t zu verhindern, kann eine Hysterese eingestellt werden. Im Bild \n\t\t oben wird beim Überschreiten von 100 Einträgen das Script ausgeführt. \n\t\t Wenn die Queue danach kleiner als 90 Einträge wird und im Anschluss \n\t\t wieder auf über 100 steigt, wird das Script erneut ausgeführt. \n\t\t Dieser Mechanismus kann auch in die andere Richtung verwendet \n\t\t werden (Gehend).","\n\t","\n","\n"," ","\n","Als auszulösende Reaktion bei Auftreten eines Events \n kann ein Script vom Typ OnTrigger aufgerufen werden.","\n","Ist bei der Aufrufart \"Zyklisch\" als Aktion \n der Aufruf eines Scripts eingestellt, so können an diesem Script dennoch \n Änderungen vorgenommen werden. Diese werden dann beim nächsten Aufruf \n des Scripts nach dem Kompilieren übernommen.","\n\n\n"]],"2":[["Ereignisse"]],"4":[["Anlegen eines Ereignisses"]],"5":[["Ereignis"]],"id":"26"})