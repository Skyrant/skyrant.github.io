rh._.exports({"0":[["Dateifunktionen (Binär- und Textdateien)"]],"1":[["\n"],["\n","Mit diesen Funktionen können einfache Schreib- und \n Leseoperationen mit Dateien durchgeführt werden.","\n","Für die Dateifunktionen kann in einem Script eine Variable \n vom Typ FILE deklariert werden. Alle weiteren Funktionen werden dann mit \n dem Namen der Variablen, einem Punkt und dem Namen der Funktion gemeinsam \n angesprochen.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.txt', 2)","\n"," ","\n"],["\n","\n","Deklaration: file.close","\n","Die Datei ","f"," wird geschlossen.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.txt', 4)","\n","f.writeln('New Line')","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.eof","\n","Die Funktion liefert \"true\", wenn beim Lesen \n das Ende der Datei erreicht wurde.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.txt', 4)","\n","while not f.eof do","\n","  debug(f.readln)","\n","enddo","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.open(string datei, long mode)","\n","Öffnet die ","datei",". ","Mode"," gibt an, wie beim \n Öffnen verfahren werden soll:","\n","\n\t","\n\t\t","Mode","\n\t\t","Verwenbar \n\t\t bei","\n\t\t","Beschreibung","\n\t","\n\t","\n\t\t","1","\n\t\t","\n\t\t","Eine \n\t\t neue Datei wird erzeugt. Ist die Datei bereits vorhanden, liefert \n\t\t die Funktion false.","\n\t","\n\t","\n\t\t","2","\n\t\t","\n\t\t","Eine \n\t\t neue Datei wird erzeugt. Ist die Datei bereits vorhanden, wird \n\t\t sie gelöscht und neu erzeugt.","\n\t","\n\t","\n\t\t","3","\n\t\t","\n\t\t","Eine \n\t\t bestehende Datei wird geöffnet. Ist die Datei nicht vorhanden, \n\t\t liefert die Funktion false.","\n\t","\n\t","\n\t\t","4","\n\t\t","\n\t\t","Eine \n\t\t bestehende Datei wird geöffnet. Ist die Datei nicht vorhanden, \n\t\t wird sie neu erzeugt.","\n\t","\n\t","\n\t\t","5","\n\t\t","\n\t\t","Eine \n\t\t bestehende Datei wird geöffnet und gelöscht. Ist die Datei nicht \n\t\t vorhanden, liefert die Funktion false.","\n\t","\n\t","\n\t\t","6","\n\t\t","\n\t\t","Eine \n\t\t bestehende Datei wird im Read-Only-Modus geöffnet. Ist die Datei \n\t\t nicht vorhanden, liefert die Funktion false.","\n\t","\n","\n","Die Funktion liefert außerdem \"false\", wenn \n ein ungültiger Pfad übergeben wurde.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.txt', 4)","\n","while not f.eof do","\n","  debug(f.readln)","\n","enddo","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.read(pointer addr, long len)","\n","Liest aus der zuvor mit \"Open\" geöffneten \n Datei ","len"," Bytes und schreibt die gelesenen Daten in den Variablenbereich \n des Scripts, der mit der Adresse ","addr"," beginnt.","\n","Beispiel",":","\n","file     f","\n","char     a[128]","\n","f.open('c:\\\\files\\\\file1.dmp', 4)","\n","f.read(&a, 128)","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: string file.readln","\n","Liest eine Zeile aus der zuvor mit \"Open\" \n geöffneten Textdatei.","\n","Beispiel",":","\n","file     f","\n","string   s","\n","f.open('c:\\\\files\\\\file1.txt', 4)","\n","s := f.readln","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.seek(long pos)","\n","Setzt den Dateizeiger auf die Position ","pos",". \n Die Funktion liefert \"true\", wenn ","pos"," innerhalb der Dateigröße \n liegt.","\n","Beispiel",":","\n","file     f","\n","long     l","\n","f.open('c:\\\\files\\\\file1.dmp', 4)","\n","if f.seek(128) then","\n","  f.write(&l, 4)","\n","endif","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: long file.size","\n","Die Funktion liefert die Größe der Datei in Bytes. \n Die Datei muss zuvor mit \"Open\" geöffnet werden.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.dmp', 4)","\n","debug(LToStr(f.size, 10))","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.trunc","\n","Die zuvor mit \"Open\" geöffnete Datei wird \n an der Position des Dateizeigers abgeschnitten.","\n","Beispiel",":","\n","file     f","\n","f.open('c:\\\\files\\\\file1.dmp', 4)","\n","if f.seek(64) then","\n","  f.trunc","\n","endif","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: bool file.write(pointer addr, long \n len)","\n","Liest ","len"," Bytes aus dem Variablenbereich des \n Scripts, der mit der Adresse ","addr"," beginnt und schreibt diese in \n die zuvor mit \"Open\" geöffnete Datei.","\n","Beispiel",":","\n","file     f","\n","char     a[128]","\n","f.open('c:\\\\files\\\\file1.dmp', 4)","\n","f.write(&a, 128)","\n","f.close","\n"," ","\n"],["\n","\n","Deklaration: file.writeln(string zeile)","\n","Schreibt die ","Zeile"," in die zuvor mit \"Open\" \n geöffnete Textdatei.","\n","Beispiel",":","\n","long     i","\n","file     f","\n","i := 0","\n","while i < 100 do","\n","  i := i + 1","\n","  f.open('c:\\\\files\\\\file1.txt', 4)","\n","  f.seek(f.size)","\n","  f.writeln('Line ' + LToStr(i, 10) + \n ': Text...')","\n","  f.close","\n","enddo","\n"," ","\n\n\n"]],"2":[["Dateifunktionen (Binär- und Textdateien)"]],"4":[["Close"],["Eof"],["Open"],["Read"],["Readln"],["Seek"],["Size"],["Trunc"],["Write"],["Writeln"]],"5":[["Dateifunktion"]],"id":"53"})