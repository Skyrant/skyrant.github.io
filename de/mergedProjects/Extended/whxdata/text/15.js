rh._.exports({"0":[["Bindings bearbeiten"]],"1":[["\n"],["\n"],["\n","Der Binding-Dialog kann über das Kontextmenü Item ","Sapient \n Bindings bearbeiten"," (Alt+Shift+B) angezeigt werden.","\n","\n","D","er Binding-Dialog ermöglicht \n das Bearbeiten von Bindings in einem JSON-Editor. Binding-Ausdrücke können \n komplett neu erstellt werden. Es ist allerdings effektiver, ein vorbereitetes \n Binding-Snippet auszuwählen und zu bearbeiten.","\n","TIPP","\n","• Halten Sie die STRG-Taste gedrückt und führen \n Sie einen Rechtsklick im Editor aus, um das Snippet-Menü zu öffnen. Wählen \n Sie ein Snippet, um es an der momentanen Position des Cursors einzufügen.","\n","• Verwenden Sie den Shortcut STRG+Alt+K um \n einen Binding-Ausdruck zu formatieren.","\n"," ","\n"," ","\n","Bereiche/Objekte können über das Dreieck-Symbol am Zeilenbeginn eingeklappt \n werden:","\n","\n","\n\t","Es ist möglich, ein eingeklapptes \n\t Objekt auszuwählen, zu kopieren und wieder einzufügen!","\n\t","Wenn der Cursor direkt hinter einer Klammer gesetzt wird, wird \n\t die jeweilige öffnende / schließende Klammer hervorgehoben.","\n","\n"],["\n","Die folgenden Beispiele sollen einen Einblick in das Arbeiten mit Bindings \n geben. Dafür werden Bindings kreiert, um eine Legato Variable in einem \n Element anzuzeigen und ihren Wert ändern zu können.","\n"],["\n","Jede Variable in Legato kann über \n einen Symbolnamen adressiert werden. Legato Sapient ermöglicht es, Variablen \n zu definieren und übernimmt ihren Wert in die Datenbank („Legato Variablen“). \n Um die Beispiele in dieser Beschreibung direkt auszuprobieren, müssen \n womöglich die folgenden Variablen über LC2 konfiguriert werden:","\n"," ","\n","\n"," ","\n","\n","\n\t","Während des Verbindungsvorgangs \n\t zu SPSen werden HMI-Variablen normalerweise direkt während des Prozesses \n\t ausgetauscht. Diese Variablen können an dem Präfix # erkannt werden, \n\t z. B. ","#PLCXXYY.R2.TEMP33",". \n\t Vor der Variablenkennung steht ein #, gefolgt von der SPS-Kennung \n\t und – getrennt durch einen Punkt – einem eindeutigen Symbolnamen des \n\t SPS-Elements.","\n\t","Alle Variablenkennungen fangen \n\t normalerweise mit einer Verbindungskennung und einem beliebigen, aber \n\t eindeutigen Symbol innerhalb dieser Verbindung an. Die verschiedenen \n\t Abschnitte sind immer durch einen Punkt getrennt. Die Verbindungskennungen \n\t enthalten möglicherweise keine Punkte.","\n","\n"," ","\n"],["\n","• Fügen Sie jedes beliebige Element zu einer Zeichnung hinzu, die über \n ein Anwendungsmenü aufrufbar ist. Öffnen Sie den Binding-Dialog.","\n","• Öffnen Sie das Snippet-Menü (STRG + Rechtsklick).","\n","• Wählen Sie Beispiele|Text aus.","\n","\n","• Ein voll funktionsfähiges Binding \n wird eingefügt, um eine Server- (oder HMI-)Variable an den Elementtext \n zu binden.","\n","\n","• Ersetzen Sie den Platzhalter für \n das Variablensymbol mit einem bereits vorhandenen, z. B. eine Reihe von \n Beispielvariablen wie oben abgebildet.","\n","\n","• \n Schließen Sie den Binding-Dialog (Anwenden). Speichern Sie die Änderungen \n in der Zeichnung.","\n","• Wechseln Sie zu Laufzeit, öffnen \n Sie die Zeichnung, z. B. in einem Dashboard, das das Visualisierungslaufzeit \n Boardlet enthält, oder in der HMI-Anwendung  der Wert der Variablen wird \n angezeigt werden.","\n","\n"],["\n","• \n Fügen Sie ein weiteres Element zur Zeichnung hinzu.","\n","• Verwenden Sie das Snippet Beispiele|Legatovar \n Wert festlegen.","\n","• Ersetzen Sie das Variablensymbol, \n um die gleiche Variable wie im vorherigen Beispiele zu adressieren. Ersetzen \n Sie den Platzhalter-Wert durch einen String. Der Platzhalter ist ein numerischer \n Wert – den String zu ersetzen bedeutet auch den Platzhalter 10 durch einen \n individuellen Textstring mit Anführungszeichen zu ersetzen, z. B. „HALLO!“.","\n","\n","• Apply binding. Save drawing. Update \n Runtime…","\n","\n"," ","\n"],["\n","•"," Kopieren \n Sie den Button um die Variable vom letzten Beispiel zu setzen.","\n","• Entfernen Sie das Attribut „Wert“ von der ","setValue"," \n Funktion.","\n","\n","• Wenden Sie das Binding an, speichern Sie die Zeichnung \n und testen Sie es…  Die Sidebar erscheint, sodass der Nutzer einen Wert \n eingeben kann.","\n","\n"],["\n","Bei genauerer Betrachtung der Beispiele wird bereits die grundlegende \n Struktur von Bindings ersichtlich.","\n","Ein Binding besteht aus drei (optinalen) Haupt“blocks“:","\n","• datasources: Eine Liste von Datenobjekten, die im Binding-Ausdruck \n verwendet werden.","\n","• bindings: “Binding Ziele” = Elementeigenschaften oder -stile, die \n an jegliches Datenobject gebunden werden.","\n","• events: Events wie Nutzerinteraktion mit Elementen, die Aktionen ausführen.","\n"],["\n","Eine Liste von Datenobjekten, die alle über einen Eigenschaftsnamen \n (Key) benannt werden. Es gibt einige Datenanbieter / Datenquellen. Die \n Struktur von Datenobjekten ist einheitlich – jedes Datenobjekt hat die \n Eigenschaft source um den Anbieter zu spezifizieren (Legatovariable, Session/lokale \n Variable, Alarm, Berechtigungen, etc.). Das Param-Objekt ist abhängig \n vom Anbieter, da das Adressieren spezifischer Informationen auch vom Anbieter \n abhängt.","\n","Beispiele mit einer Liste von definierten Datenobjekten, einige mit \n unterschiedlichen „Quellen“ und entsprechenden individuellen Parametern:","\n","{","\n","   "," \"datasources\": {","\n","       "," \"n1\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n1\"","\n","           "," }","\n","       "," },","\n","       "," \"n2\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n2\"","\n","           "," }","\n","       "," },","\n","       "," \"n3\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n3\"","\n","           "," }","\n","       "," },","\n","       "," \"sum\": {","\n","           "," \"source\": \"formula\",","\n","           "," \"params\": {","\n","               "," \"formula\": \"SUM(n1, \n n2, n3)\"","\n","           "," }","\n","       "," },","\n","       "," \"alarm\": {","\n","           "," \"source\": \"alarm\",","\n","           "," \"params\": {","\n","               "," \"conSym\": \"con\",","\n","               "," \"extCode\": -6","\n","           "," }","\n","       "," }","\n","   "," },","\n","   "," \"bindings\": {","\n","       "," ...","\n","   "," }","\n","}","\n"," ","\n"," ","\n","Die Referenz \n enthält alle verfügbaren Datenanbieter. Im Folgenden werden die üblichsten \n als Beispiele gezeigt.","\n","Legato-Variable: \n Eine Variable befindet sich auf dem Server. Alle Klienten sehen den gleichen \n Wert. Im HMI-Kontext werden diese Variablen üblicherweise mit einer verbundenen \n SPS ausgetauscht.","\n","\"","var\": {","\n","   "," \"source\": \"var\",","\n","   "," \"params\": {","\n","       "," \"sym\": \"varSym\"","\n","   "," }","\n","}","\n"," ","\n","Session-Variable: Eine Variable ist in der gesamten App zugänglich (da \n der Wert mit allen Zeichnungen in der App ausgetauscht wird, ist er in \n der Session gleichbleibend).","\n","\"sessionvar\": \n {","\n","   "," \"source\": \"sessionvar\",","\n","   "," \"params\": {","\n","       "," \"sym\": \"xyz\"","\n","   "," }","\n","}","\n"," ","\n","Lokale Variable: Eine Variable mit \n dem Umfang der Zeichnung.","\n","\"","localvar\": {","\n","   "," \"source\": \"localvar\",","\n","   "," \"params\": {","\n","       "," \"sym\": \"xxx\"","\n","   "," }","\n","}","\n"," ","\n"," ","\n","Alarm: Alarmstatus.","\n","\"","alarm\": \n {","\n","   "," \"source\": \"alarm\",","\n","   "," \"params\": {","\n","       "," \"conSym\": \"con\",","\n","       "," \"extCode\": -6","\n","   "," }","\n","}","\n"," ","\n","Formeln: Der Wert wird mit einer Formel \n ausgerechnet.","\n","\"","formula\": {","\n","   "," \"source\": \"formula\",","\n","   "," \"params\": {","\n","       "," \"formula\": \"SUM(1,1)\"","\n","   "," }","\n","}","\n"," ","\n","TIP:","\n","Verwenden Sie Snippets, um einzelne Datenobjekte \n einzufügen. Ändern Sie lediglich den Key des neuen Eintrags und die Params \n um das Datenobjekt zu adressieren.","\n"," ","\n"],["\n","Die Bindingssektion (Objekt) enthält eine Liste mit allen Bindingzielen. \n Ziele definieren Elementeigenschaften oder -stile, die dynamische Daten \n während der Laufzeit erhalten. Die geläufigsten Bindingziele sind Text, \n Füllfarbe, Rahmenfarbe, Schriftfarbe oder Sichtbarkeit eines Elements. \n Einem Ziel kann ein fester Wert zugeschrieben werden oder sich auf ein \n Datenobjekt beziehen. Das einfachste, erwähnenswerte Binding:","\n","{","\n","   "," \"bindings\": {","\n","       "," \"text\": {","\n","           "," \"value\": \n ","\"A static text\"","\n","       "," }","\n","   "," }","\n","}","\n"," ","\n","Dem Binding-Objekt für den Text wird einfach ein statischer String zu \n seinem Wert hinzugefügt. Ein typischerer Anwendungsfall ist es, ein Datenobjekt \n zu referenzieren, um es als Wert zu verwenden. Die Struktur bleibt die \n gleiche, nur dass der Wert ein Objekt bekommt – in diesem Fall, eine Datenreferenz. \n Und es muss natürlich ein Datenobjekt existieren, das referenziert werden \n kann:","\n","{","\n","    \"datasources\": \n {","\n","        \"someVar\": \n {","\n","            \"source\": \n \"var\",","\n","            \"params\": \n {","\n","                \"sym\": \n \"examples.str1\"","\n","            }","\n","        }","\n","    },","\n","    \"bindings\": \n {","\n","        \"text\": \n {","\n","            \"value\": \n {","\n","                \"source\": \n \"dataref\",","\n","                \"params\": \n {","\n","                    \"ref\": \n \"someVar\"","\n","                },","\n","                \"defaultValue\": \n \"/\"","\n","            }","\n","        }","\n","    }","\n","}","\n"," ","\n"," ","\n","\n","Eine Datenreferenz hat die gleiche Basisstruktur \n wie jedes andere Datenobjekt.","\n"," ","\n","Es ist sogar möglich, eine Berechnung oder Formel für einen Wert direkt \n zu definieren.","\n","{","\n","   "," \"datasources\": {","\n","       "," \"n1\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n1\"","\n","           "," }","\n","       "," },","\n","       "," \"n2\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n2\"","\n","       "," ","    ","}","\n","       "," }","\n","   "," },","\n","   "," \"bindings\": {","\n","       "," \"text\": {","\n","           "," \"value\": \n ","{","\n","               "," \"source\": \"formula\",","\n","               "," \"params\": {","\n","                   "," \"formula\": \"SUM(n1, \n n2)\"","\n","               "," }","\n","           "," }","\n","       "," }","\n","   "," }","\n","}","\n"," ","\n","Das Konzept ist für alle Ziele genau gleich, z. B. eine statische Füllfarbe:","\n","{","\n","   "," \"bindings\": {","\n","       "," \"fillColor\": {","\n","           "," \"value\": \n ","\"red\"","\n","       "," }","\n","   "," }","\n","}","\n"," ","\n","Ein typisches Beispiel: eine Farbe, die vom Wert abhängig ist:","\n","{","\n","   "," \"datasources\": {","\n","       "," \"n1\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.n1\"","\n","           "," }","\n","       "," }","\n","   "," },","\n","   "," \"bindings\": {","\n","       "," \"fillColor\": \n ","{","\n","           "," \"value\": {","\n","               "," \"source\": \"formula\",","\n","               "," \"params\": {","\n","                   "," \"formula\": \"IF(n1 \n > 5, 'red', 'green')\"","\n","               "," }","\n","           "," }","\n","       "," }","\n","   "," }","\n","}","\n"," ","\n"," ","\n","\n","Das Bindings-Objekt kann jegliche Bindingziele \n enthalten, die durch Kommata voneinander abgegrenzt sind. Es gibt Snippets \n für die am meisten verwendeten Bindingziele, um sie in ein Bindings-Objekt \n einzufügen.","\n"," ","\n","Beispiel:","\n","{","\n","    \"datasources\": \n {","\n","        \"n1\": \n {","\n","            \"source\": \n \"var\",","\n","            \"params\": \n {","\n","                \"sym\": \n \"examples.n1\"","\n","            }","\n","        }","\n","    },","\n","    \"bindings\": \n {","\n","        \"text\": \n {","\n","            \"value\": \n {","\n","                \"source\": \n \"dataref\",","\n","                \"params\": \n {","\n","                    \"ref\": \n \"n1\"","\n","                }","\n","            }","\n","        },","\n","        \"fillColor\": \n {","\n","            \"value\": \n {","\n","                \"source\": \n \"formula\",","\n","                \"params\": \n {","\n","                    \"formula\": \n \"IF(n1 > 5, 'red', 'green')\"","\n","                }","\n","            }","\n","        }","\n","    }","\n","}","\n"," ","\n","TIPP:","\n","Bei den meisten Eigenschaftswerten ist es \n möglich, einen statischen Wert in einem Binding durch eine Datenreferenz \n oder ein Datenobjekt zu ersetzen. Der Variablenname einer Definition für \n ein Variablendatenobjekt kann sogar an ein anderes Datenobjekt gebunden \n werden, z. B. dynamisches Erstellen eines Variablensymbols während der \n Laufzeit.","\n"," ","\n"],["\n","Events können verwendet werden, um zu reagieren, z. B. wenn ein Element \n angeklickt wird. Jedes Event kann eine oder mehrere Aktionen ausführen. \n Wie bereits gezeigt – die Aktion Wert festlegen:","\n","{","\n","   "," \"datasources\": {","\n","       "," \"someVar\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.str1\"","\n","           "," }","\n","       "," }","\n","   "," },","\n","   "," \"events\": {","\n","       "," \"onClick\": [","\n","           "," {","\n","               "," \"action\": \"setValue\",","\n","               "," \"params\": {","\n","                   "," \"target\": {","\n","                       "," \"source\": \"dataref\",","\n","                       "," \"params\": {","\n","                           "," \"ref\": \"someVar\"","\n","                       "," }","\n","                   "," },","\n","                   "," \"value\": \"HELLO!!!\"","\n","               "," }","\n","           "," }","\n","       "," ]","\n","   "," }","\n","}","\n"," ","\n","Weitere Aktionen, die ausgeführt werden:","\n","{","\n","    \"datasources\": \n {","\n","        \"n1\": \n {","\n","            \"source\": \n \"var\",","\n","            \"params\": \n {","\n","                \"sym\": \n \"examples.n1\"","\n","            }","\n","        },","\n","        \"n2\": \n {","\n","            \"source\": \n \"var\",","\n","            \"params\": \n {","\n","                \"sym\": \n \"examples.n2\"","\n","            }","\n","        }","\n","    },","\n","    \"events\": \n {","\n","        \"onClick\": \n [","\n","            {","\n","                \"action\": \n \"setValue\",","\n","                \"params\": \n {","\n","                    \"target\": \n {","\n","                        \"source\": \n \"dataref\",","\n","                        \"params\": \n {","\n","                            \"ref\": \n \"n1\"","\n","                        }","\n","                    },","\n","                    \"value\": \n 7","\n","                }","\n","            },","\n","            {","\n","                \"action\": \n \"setValue\",","\n","                \"params\": \n {","\n","                    \"target\": \n {","\n","                        \"source\": \n \"dataref\",","\n","                        \"params\": \n {","\n","                            \"ref\": \n \"n2\"","\n","                        }","\n","                    },","\n","                    \"value\":8","\n","                }","\n","            }","\n","        ]","\n","    }","\n","}","\n"," ","\n","Die folgenden Events werden zur Interaktion genutzt:","\n","• onClick: Wird ausgeführt, wenn der Nutzer das Element mit der Maus \n anklickt.","\n","• onMouseDown: Wird ausgeführt, wenn der Nutzer die Maustaste über einem \n Element klickt.","\n","• onMouseUp: Wird ausgeführt, wenn der Nutzer die Maustaste über einem \n Element loslässt.","\n","• onMouseEnter / onMouseLeave: Wird ausgeführt, wenn der Mauscursor \n in einen Elementbereich hinein-/hinausgeführt wird. Dies ist z. B. für \n Funktionalitäten wie Tooltips nützlich. ","\n","Die Events onLoad and onUnload werden verwendet um Aktionen aufzurufen, \n wenn eine Zeichnung geladen oder geschlossen wird. Dies wird z. B. verwendet, \n um während des Ladevorgangs Variablen für einen anfänglichen Wert zu setzen \n oder die Variablen zurückzusetzen, wenn die Zeichnung geschlossen wird.","\n"," ","\n","\n","Die Events onLoad und onUnload können nur \n für das Dokument selbst verwendet werden.","\n","Das Event onChange kann verwendet werden, um auf Wertänderungen zu reagieren, \n und stellt die einzige Ausnahme mit einer etwas anderen Übermittlung dar. \n Details zur Nutzung können in der Referenz gefunden werden.","\n"],["\n","Die Einzelaktionen werden in der Referenz detaillierter erklärt. Eine \n wichtige Eigenschaft, die für jede Aktion genutzt werden kann, sollte \n hier allerdings bereits erwähnt werden: die enabled Eigenschaft, die die \n Ausführung von Aktionen verhindert, die auf irgendein Datenobjekt angewiesen \n sind. Ein typischer Anwendungsfall wäre es, bestimmte Aktionen abhängig \n von den Berechtigungen des momentanen Nutzers zu ermöglichen.","\n","{","\n","   "," \"datasources\": {","\n","       "," \"someVar\": {","\n","           "," \"source\": \"var\",","\n","           "," \"params\": {","\n","               "," \"sym\": \"examples.str1\"","\n","           "," }","\n","       "," },","\n","       "," \"isAdmin\": {","\n","           "," \"source\": \"permission\",","\n","           "," \"params\": {","\n","               "," \"actions\": [","\n","                   "," \"ADMIN\"","\n","               "," ]","\n","           "," }","\n","       "," }","\n","   "," },","\n","   "," \"events\": {","\n","       "," \"onClick\": [","\n","           "," {","\n","               "," \"action\": \"setValue\",","\n","               "," \"params\": {","\n","                   "," \"target\": {","\n","                       "," \"source\": \"dataref\",","\n","                       "," \"params\": {","\n","                           "," \"ref\": \"someVar\"","\n","        "," ","               ","}","\n","                   "," }","\n","               "," },","\n","               "," ","\"enabled\": {","\n","                   "," \"source\": \"dataref\",","\n","                   "," \"params\": {","\n","                       "," \"ref\": \"isAdmin\"","\n","                   "," }","\n","               "," }","\n","           "," }","\n","       "," ]","\n","   "," }","\n","}","\n"," ","\n\n\n"]],"2":[["Bindings bearbeiten"]],"5":[["Binding-Dialog"],["Meist \n genutzte Bindings – Variablenwerte anzeigen und festlegen"],["Struktur von Binding-Ausdrücken"]],"6":[["Legato und HMI Variablen adressieren"],["Beispiel: Eine Variable mit dem Text eines Elements verbinden"],["Beispiel: Eine Variable durch Anklicken eines Elements ändern"],["Beispiel: Dem Nutzer ermöglichen \n jeglichen Wert durch Anklicken eines Elements einzugeben"],["Datenquellen"],["Bindings"],["Events"],["Actions"]],"id":"15"})