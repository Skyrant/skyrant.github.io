<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "1.6";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey_adj/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" data-condition="Others:Deutsch"/>
<meta name="OriginalFile" content="Legato_ApplicationEngine_de.docx" data-condition="Others:Deutsch"/>
<meta name="condition-tags" content="Others:Deutsch" data-condition="Others:Deutsch"/>
<meta http-equiv="Content-Language" content="de-DE" data-condition="Others:Deutsch"/>
<meta name="generator" content="Adobe RoboHelp 2020" data-condition="Others:Deutsch"/>
<title data-condition="Others:Deutsch">Grundlagen der SE-Jobs</title>
<link rel="stylesheet" href="../../assets/css/Legato_Systemdokumentation2.css" type="text/css" data-condition="Others:Deutsch"/>
<style type="text/css" data-condition="Others:Deutsch">/*<![CDATA[*/
body {
	background-color: #ffffff;
}
A:visited {
	
}
A:link {
	
}
/*]]>*/</style>
<meta name="rh-index-keywords" content="Job,SE Job" data-condition="Others:Deutsch"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Grundlagen der SE-Jobs">
        <span>Grundlagen der SE-Jobs</span>
      </div>
      <div class="gotohome" title="Hier klicken, um diese Seite im Zusammenhang anzuzeigen">
        <span>Hier klicken, um diese Seite im Zusammenhang anzuzeigen</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



<h2 data-condition="Others:Deutsch">Grundlagen der Jobs</h2>
<h3 data-condition="Others:Deutsch"><a id="Job-Details"></a>Job-Details</h3>
<p class="BodyText" data-condition="Others:Deutsch"><span style="font-size: 14.6667px; font-variant-ligatures: normal; 
							 font-variant-caps: normal; orphans: 2; widows: 2; 
							 -webkit-text-stroke-width: 0px; display: inline	 ! important ; 
							 float: none;">Die Sapient Engine (SE) führt 
 in einem wählbaren Zeitraster Systemfunktionen aus. Diese Funktionen sind 
 in Form eines Java-Skripts (Java) implementiert.</span> </p>
<p class="BodyText" data-condition="Others:Deutsch">Jobs der Sapient Engine werden im LC2 (Systemadministration 
 - Sapient Engine - SE Jobs) parametriert und setzen sich aus folgenden 
 Angaben zusammen:</p>
<table class="TabelleBlank" cellspacing="0" style="border-collapse:collapse;" width="100%" cellpadding="1" data-condition="Others:Deutsch">
	<colgroup><col width="198"/>
	<col width="406"/>
	</colgroup><tbody><tr style="height: 22px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Symbol:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Eindeutiges 
		 Symbol des Jobs.</p></td>
	</tr>
	<tr style="height: 22px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Name:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Frei 
		 vergebbarer Name des Jobs.</p></td>
	</tr>
	<tr style="height: 22px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Beschreibung:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Frei 
		 vergebbare Beschreibung des Jobs.</p></td>
	</tr>
	<tr style="height: 42px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Modul:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Verweis 
		 auf ein Systemmodul, für das dieser Job relevant ist, z.B. Meldesystem, 
		 Messwerte, etc. Optional.</p></td>
	</tr>
	<tr style="height: 131px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">SE-Instanz:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Sapient 
		 Engine Instanz.</p>
		<p class="TextkörperTable"><span style="font-family: &#39;Palatino Linotype&#39;, serif; 
										 font-size: 14.6667px; font-variant-ligatures: normal; 
										 font-variant-caps: normal; orphans: 2; 
										 text-align: justify; widows: 2; 
										 display: inline	 ! important ; 
										 float: none;">Je nach Systemauslastung 
		 kann die Sapient Engine in mehreren Instanzen ausgeführt werden. 
		 Die SE-Instanzen müssen in P_MODULES eingetragen werden. Dabei 
		 ist der Modul-Typ auf &quot;Sapient Engine&quot; zu setzen und 
		 als &quot;Projekt-ID&quot; die Instanznummer anzugeben.</span><span class="Apple-converted-space"> </span> </p></td>
	</tr>
	<tr style="height: 22px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Scheduler:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Scheduler 
		 für den Job. Default ist &#39;main&#39;.</p></td>
	</tr>
	<tr style="height: 22px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Funktions-Pfad:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Pfad 
		 / URL der aufzurufenden Funktion (Skript oder Java).</p></td>
	</tr>
	<tr style="height: 317px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Parameter 
		 (JSON):</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">In 
		 diesem Feld werden weitere Parameter, die zur Ausführung des Jobs 
		 notwendig sind, angegeben.</p>
		<p class="TextkörperTable">Aufbau des Feldes und Beispiel-Parameter 
		 eines Jobs:</p>
		<p class="TextkörperTable">{</p>
		<p class="TextkörperTable">&quot;threads&quot;: 1,</p>
		<p class="TextkörperTable">&quot;queue&quot;: 10,</p>
		<p class="TextkörperTable">&quot;ShiftsPartition&quot;: &quot;&quot;,</p>
		<p class="TextkörperTable">&quot;SortShiftsByNodeLevel&quot;: false</p>
		<p class="TextkörperTable">}</p>
		<p class="TextkörperTable">Da der Aufbau dieses Feldes von Job 
		 zu Job sehr unterschiedlich ist, wird in der Beschreibung der 
		 einzelnen Jobs näher darauf eingegangen.</p></td>
	</tr>
	<tr style="height: 23px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Timeout 
		 (s) (optional):</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Timeout 
		 für die Ausführung des Jobs (in Sekunden). Dient der Überwachung 
		 von Jobs. Wenn NULL, findet keine Jobüberwachung statt.</p></td>
	</tr>
	<tr style="height: 40px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Letzter 
		 Start:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Kein 
		 Parameter, wird vom Job gesetzt.</p>
		<p class="TextkörperTable">Zeitstempel; wann der Job das letzte 
		 Mal gestartet wurde.</p></td>
	</tr>
	<tr style="height: 71px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Letzte 
		 Ausführung:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Kein 
		 Parameter, wird vom Job gesetzt.</p>
		<p class="TextkörperTable">Zeitstempel; wann der Job das letzte 
		 Mal ausgeführt (beendet) wurde.</p></td>
	</tr>
	<tr style="height: 71px;">
		<td style="vertical-align: top;"><p class="TextkörperTable">Letzte 
		 Fehlermeldung:</p></td>
		<td style="vertical-align: top;"><p class="TextkörperTable">Kein 
		 Parameter, wird vom Job gesetzt.</p>
		<p class="TextkörperTable">Falls die letzte Ausführung zu einem 
		 Fehler führte, der Fehlertext. Falls letzte Ausführung okay, NULL.</p></td>
	</tr>
</tbody></table>
<p class="BodyText" data-condition="Others:Deutsch"> </p>
<h3 data-condition="Others:Deutsch"><a id="Trigger"></a>Trigger</h3>
<p class="BodyText" data-condition="Others:Deutsch">Die Jobs werden nach Zeitplänen (Triggern) ausgeführt. 
 Welche Trigger für einen Job verwendet werden, wird im LC2 unter System-Administration 
 - Sapient Engine - Job-Trigger definiert. <span style="font-size: 14.6667px; 
												 font-variant-ligatures: normal; 
												 font-variant-caps: normal; 
												 orphans: 2; widows: 2; 
												 -webkit-text-stroke-width: 0px; 
												 display: inline	 ! important ; 
												 float: none;">Um auch 
 komplexe Zeitpläne abzubilden, können jedem Job auch mehrere Trigger zugeordnet 
 werden (z.B. einen für jeden Werktag und einen anderen fürs Wochenende).</span></p>
<p class="BodyText" data-condition="Others:Deutsch"><span style="font-size: 14.6667px; font-variant-ligatures: normal; 
							 font-variant-caps: normal; orphans: 2; widows: 2; 
							 -webkit-text-stroke-width: 0px; display: inline	 ! important ; 
							 float: none;">Der jeweilige Standard-Trigger 
 mit dem Standard-Intervall werden bei den jeweiligen Jobs genannt.</span></p>
<p class="BodyText" style="font-size: 14.6667px; font-variant-ligatures: normal; 
	 font-variant-caps: normal; display: inline	 ! important ; orphans: 2; 
	 widows: 2;" data-condition="Others:Deutsch"><span style="-webkit-text-stroke-width: 0px;">Die verfügbaren 
 Trigger-Typen und die zugehörigen Parameter sind im nächsten Kapitel beschrieben.</span></p>
<h3 style="orphans: 2; widows: 2;" data-condition="Others:Deutsch"><span style="-webkit-text-stroke-width: 0px;"><a id="Verhinderung_gleichzeitiger_Ausführung"></a>Verhinderung gleichzeitiger 
 Ausführung</span></h3>
<p class="BodyText" data-condition="Others:Deutsch">Einige SE-Job-Prozeduren können nicht korrekt laufen, 
 wenn sie gleichzeitig von mehreren Jobs der gleichen oder verschiedener 
 Sapient Engine Instanzen ausgeführt werden.</p>
<p class="BodyText" data-condition="Others:Deutsch">Damit solche Jobs parallele Ausführungen entdecken 
 und verhindern können, wird ein zusätzlicher Bool&#39;scher Parameter an jede 
 Job-Prozedur übergeben. Dieser Parameter gibt an, ob bereits Ausführungen 
 des Jobs vor diesem Start aktiv waren.</p>
<p class="BodyText" data-condition="Others:Deutsch">Bevor die neue Startzeit des Jobs in die Datenbank 
 geschrieben wird, fragt die Task &quot;jobs&quot; der Sapient Engine in 
 der Datenbank weitere Ausführungen desselben Jobs ab, die noch aktiv sind. 
 Das Ergebnis dieser Überprüfung wird dann als neuer Bool&#39;scher Parameter 
 &quot;parallel_exec&quot; an die Prozedur übergeben.</p>
<p class="BodyText" data-condition="Others:Deutsch">Job-Prozeduren, die exklusiv ausgeführt werden müssen, 
 sollten diesen Parameter beim Start überprüfen und die Ausführung mit 
 einem Fehler abbrechen, wenn der Rückgabewert &quot;true&quot; war.</p>
<p class="BodyText" data-condition="Others:Deutsch">Zum Beispiel der Job HANDLE_EVENTS (Funktionspfad: 
 /de/gefasoft/sapient/db/shift/HandleEvents/execute) prüft diesen neuen 
 Parameter parallel_exec. Wird dieser Job bereits ausgeführt, wird eine 
 ConcurrentModificationException geworfen, die auch in SE_JOB_EXECUTIONS 
 geschrieben wird.</p>
<p class="BodyText" data-condition="Others:Deutsch">Der Code sieht folgendermaßen aus:</p>
<p class="TextCode" data-condition="Others:Deutsch">ArgsMap args = ArgsMap.getInstance(params, DEF_SHIFT_END);</p>
<p class="TextCode" data-condition="Others:Deutsch">Object isParallel = args.getMapEntry(&quot;job_params&quot;, 
 &quot;parallel_exec&quot;);</p>
<p class="TextCode" data-condition="Others:Deutsch">if (isParallel != null &amp;&amp; &quot;true&quot;.equalsIgnoreCase( 
 isParallel.toString() )) {</p>
<p class="TextCode" data-condition="Others:Deutsch">String msg = &quot;The procedure HandleEvents/execute 
 is executed already by another process. Please check your configuration. 
 &quot;</p>
<p class="TextCode" data-condition="Others:Deutsch">+ &quot;Current Trigger symbol: &quot; + String.valueOf(args.get(&quot;trigger_symbol&quot;));</p>
<p class="TextCode" data-condition="Others:Deutsch">logger.error(msg);</p>
<p class="TextCode" data-condition="Others:Deutsch">throw new ConcurrentModificationException(msg);</p>
<p class="TextCode" data-condition="Others:Deutsch">}</p>
<p class="TextCode" data-condition="Others:Deutsch"> </p>


</body></html>