rh._.exports({"0":[["file"]],"1":[["\n"],["\n","Der Objekt-Typ File ermöglicht es JavaScript-Jobs, \n auf Dateien zuzugreifen.","\n","Objekte vom Typ File können auf die folgenden Arten \n und Weisen erzeugt werden:","\n","new File()","\n","legt ein Objekt an, das auf keine Datei verweist.","\n","new File(path)","\n","legt ein Objekt an, das auf die angegebene Datei oder \n das angegebene Verzeichnis verweist. Als path kann entweder ein anderes \n File-Objekt oder ein String angegeben werden.","\n","new File(path, name)","\n","legt ein Objekt an, das auf die Datei oder das Unterverzeichnis \n mit dem angegebenen Namen im angegebenen Verzeichnis verweist. Das Verzeichnis \n kann als File- oder String-Objekt übergeben werden, der Name muss ein \n String sein.","\n"," ","\n","Files haben folgende Eigenschaften:","\n","name (String, readonly)","\n","Der Name der Datei oder des Unterverzeichnisses","\n","exists (Boolean, readonly)","\n","Ob die Datei bzw. das Unterverzeichnis existiert","\n","isfile (Boolean, readonly)","\n","Ob es sich um eine Datei handelt","\n","isdir (Boolean, readonly)","\n","Ob es sich um ein Verzeichnis handelt","\n","readable (Boolean, readonly)","\n","Ob die Datei gelesen werden kann (bzw. darf)","\n","writeable (Boolean, readonly)","\n","Ob die Datei geschrieben werden kann (bzw. darf)","\n","parentdir (File, readonly)","\n","Ein File-Objekt, das auf das Verzeichnis der Datei \n bzw. auf das übergeordnete Verzeichnis des Verzeichnisses verweist","\n","absolutePath (String, readonly)","\n","Der absolute Pfad der Datei bzw. des Verzeichnisses","\n","canonicalPath (String, readonly)","\n","Der kanonische (eindeutige) Pfad der Datei bzw. des \n Verzeichnisses","\n","lastmodified (Date, readonly)","\n","Das Datum der letzten Änderung der Datei bzw. des Verzeichnisses","\n","filelength (Zahl, readonly)","\n","Die Länge der Datei (falls es keine ist, 0 oder -1)","\n","charset (String, readwrite)","\n","Name des Zeichensatzes, der beim Lesen oder Schreiben \n verwendet werden soll (z.B. \"UTF-8\", \"ISO-8859-1\" \n o.ä.)","\n","lineNumber (Zahl, readonly)","\n","Die Nummer der aktuellen Zeile beim Lesen","\n","useLocking (Boolean, readwrite)","\n","Ob die Datei beim Lesen und Schreiben für andere Prozesse \n gesperrt werden soll (beim Lesen wird anderen Prozessen erlaubt, die Datei \n ebenfalls zu lesen, beim Schreiben wird die Datei exklusiv gesperrt). \n Eine eventuelle Sperre wird beim Aufruf der Funktion close() freigegeben.","\n","append (Boolean, readwrite)","\n","Ob beim Schreiben an die Datei angehängt (true) oder \n ihr Inhalt überschrieben werden soll (false). Soll die Datei nicht überschrieben \n werden, muss diese Eigenschaft unbedingt vor dem ersten Schreiben auf \n true gesetzt werden, ansonsten würde beim ersten Schreiben bereits die \n Länge der Datei auf 0 gesetzt. Nachträgliches Setzen von \"append\" \n wäre dann sinnlos.","\n"," ","\n","Files haben folgende Funktionen:","\n","mkdir()","\n","Versucht, das durch dieses File-Objekt angegebene Verzeichnis \n zu erstellen. Gibt zurück, ob dies gelungen ist (Boolean).","\n","mkdirs()","\n","Versucht, das durch dieses File-Objekt angegebene Verzeichnis \n und alle eventuell noch nicht existierenden übergeordnete Verzeichnisse \n anzulegen und gibt zurück, ob dies gelungen ist.","\n","mkparents()","\n","Versucht, alle eventuell noch nicht existierenden übergeordneten \n Verzeichnisse dieses Verzeichnisses oder dieser Datei anzulegen und gibt \n zurück, ob dies gelungen ist.","\n","remove()","\n","Löscht die Datei bzw. das Verzeichnis dieses File-Objekts \n und gibt zurück, ob dies gelungen ist.","\n","renameTo(dest)","\n","Benennt die Datei bzw. das Verzeichnis dieses File-Objekts \n in den angegebenen Namen (String oder File-Objekt) um und gibt zurück, \n ob dies gelungen ist.","\n","copyTo(dest)","\n","Kopiert die Datei dieses File-Objekts in das angegebene \n Ziel (String oder File-Objekt) und gibt die Anzahl der kopierten Bytes \n zurück. Im Fehlerfall ist das Ergebnis -1. Die Datei wird binär kopiert, \n diese Funktion ist also nicht auf Textdateien beschränkt.","\n","list(filter)","\n","Liefert ein Array mit den Namen aller Dateien und Unterverzeichnissen \n des durch dieses File-Objekt angegebenen Verzeichnisses. Optional kann \n die Liste der Dateinamen durch einen Filter eingeschränkt werden. Als \n Filter kann folgendes angegeben werden:","\n","Ein String mit Wildcards (? für ein beliebiges Zeichen \n außer Punkt und Schrägstrich, * für beliebig viele solcher Zeichen, ** \n für beliebig viele Zeichen inklusive Punkten oder Schrägstrichen).","\n","Ein Date-Objekt. Es werden nur Dateien und Verzeichnisse \n in die Liste aufgenommen, die neuer als das angegebene Datum sind.","\n","Eine Funktion mit den zwei Parametern \"path\" \n und \"name\", die für jede Datei und jedes Unterverzeichnis aufgerufen \n wird. Nur, wenn diese Funktion \"true\" zurückliefert, wird der \n Name in die Liste aufgenommen.","\n","Ein beliebiges JavaScript-Objekt, das eine Funktion \n namens \"filter\" hat, die dann wie oben aufgerufen wird.","\n","readXmlEncoding()","\n","Spezialfunktion für XML-Dateien: Liest die erste Zeile, \n interpretiert sie als XML-Deklaration, extrahiert daraus die Angabe des \n Zeichensatzes und schließt die Datei wieder. Wird in der Regel so benutzt:","\n"," ","\n","file.charset = file.readXmlEncoding();","\n","var xml = new Xml(file.read());","\n"," ","\n","read()","\n","Liest den gesamten Inhalt der Datei ab der aktuellen \n Position und liefert ihn als String zurück.","\n","readChar()","\n","Liest ein Zeichen aus der Datei und liefert es als \n String zurück.","\n","readLine()","\n","Liest eine Zeile aus der Datei und liefert sie als \n String zurück (null bei Datei-Ende).","\n","readLines()","\n","Liest alle verbleibenden Zeilen aus der Datei und liefert \n sie als Array von Strings zurück.","\n","readCSV(separator, quote)","\n","Liest einen Datensatz (Zeile) aus der CSV-Datei und \n liefert ein Array mit den gelesenen Feld-Werten. Parameter:","\n","separator \n (optional): das Feldtrenner-Zeichen, Standardwert Strichpunkt (;)","\n","quote \n (optional): das Anführungs-Zeichen, Standardwert doppeltes Anführungszeichen (\")","\n","write(text)","\n","Schreibt den angegebenen String in die Datei.","\n","writeln(line)","\n","Schreibt die optional angegebene Zeile (String) und \n ein Zeilenende in die Datei.","\n","writeCSV(values, separator, quote, eol)","\n","Schreibt einen Datensatz (Zeile) in die CSV-Datei. \n Parameter:","\n","values: \n ein Array mit den zu schreibenden Feld-Werten","\n","separator \n (optional): das Feldtrenner-Zeichen, Standardwert Strichpunkt (;)","\n","quote \n (optional): das Anführungs-Zeichen, Standardwert doppeltes Anführungszeichen \n (\")","\n","eol \n (optional): die Zeilenende-Sequenz. Standardwert ist abhängig vom Betriebssystem","\n","close()","\n","Schließt die Datei, falls sie gelesen oder geschrieben \n worden ist. Die nächste Lese- oder Schreib-Operation beginnt wieder am \n Anfang der Datei.","\n"," ","\n","Zum Dekodieren und Formatieren von CSV-formatierten \n Strings erhält das File-Objekt noch zwei \"statische\" Funktionen \n (statische Funktionen können ohne ein spezifisches File-Objekt über den \n Typ-Namen aufgerufen werden, z.B. \"s = File.formatCSV(values)\"):","\n","parseCSV(data, separator, quote)","\n","Liest den ersten Datensatz (Zeile) aus dem CSV-formatierten \n übergebenen String und liefert ein Array der gelesenen Feld-Werte. Parameter:","\n","data: \n die zu lesenden Daten","\n","separator \n (optional): das Feldtrenner-Zeichen, Standardwert Strichpunkt (;)","\n","quote \n (optional): das Anführungs-Zeichen, Standardwert doppeltes Anführungszeichen \n (\")","\n","formatCSV(values, separator, quote)","\n","Formatiert einen Datensatz (Zeile) im CSV-Format und \n liefert sie als String. Parameter:","\n","values: ein \n Array mit den zu formatierenden Feld-Werten","\n","separator \n (optional): das Feldtrenner-Zeichen, Standardwert Strichpunkt (;)","\n","quote \n (optional): das Anführungs-Zeichen, Standardwert doppeltes Anführungszeichen \n (\")","\n"," ","\n","Ein File-Objekt kann nicht gleichzeitig zum Lesen und \n zum Schreiben benutzt werden. Jedes Lesen setzt die Schreibposition und \n jedes Schreiben die Leseposition zurück.","\n\n\n"]],"3":[["file"]],"id":"31"})