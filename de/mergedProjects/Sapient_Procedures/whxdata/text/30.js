rh._.exports({"0":[["Einbinden von externen Funktionen und Java-Klassen"]],"1":[["\n"],["\n","Java-Klassen können im Script während des Ladens der \n Script-Datei eingebunden werden.","\n","Während des Ladens einer Script-Datei steht in Scripten \n ein globales Objekt namens \"loader\" zur Verfügung. Dieses besitzt \n nur zwei aufrufbare Funktion, nämlich \"include(scriptfile)\", \n mit der weitere Script-Dateien angegeben werden können, die in das Script \n eingebunden werden sollen und importObjectType(javaClassName), wodurch \n die genannten Java Klassen für das Script aufrufbar gemacht werden.","\n","Über \"loader.include(scriptfile)\" werden \n externe Dateien in das Script eingebunden. Der Inhalt dieser Dateien wird \n quasi an das Ende der aktuellen Script-Datei angehängt (bitte beachten: \n es wird wirklich \"angehängt\", nicht an der Stelle des Aufrufs \n ausgewertet). Wird die gleiche Datei mehrmals angegeben, wird sie trotzdem \n nur ein einziges Mal geladen, sodass es nicht zu Fehlern wegen mehrfacher \n Definition der darin definierten Funktionen oder Variablen kommen kann.","\n","Mittels \"loader.importObjectType(javaClassName)\" \n werden Java-Klassen als JavaScript Objekt-Typen im Script bekannt gemacht. \n Bei den betreffenden Java-Klassen muss es sich um speziell für diesen \n Zweck geschriebene Klassen handeln, die den Anforderungen der JavaScript-Engine \n (Apache Rhino) entsprechen (d.h., sie müssen das Interface \"Scriptable\" \n implementieren bzw. von \"ScriptableObject\" abgeleitet sein). \n Es muss der komplette Name der Java-Klasse inklusive Package-Namen angegeben \n werden.","\n","Das Objekt \"loader\" steht ausschließlich \n während des Ladens des Scripts zur Verfügung und ist später, z.B. während \n der Initialisierung oder Ausführung des Jobs nicht definiert. Die entsprechenden \n Aufrufe von \"loader.include()\" sollten folglich außerhalb aller \n Job-Funktionen stehen, z.B.:","\n","loader.include(\"lib/commons.js\");","\n","function execute(scheduler) {","\n","    // irgendwas tun (Job erledigen)","\n","}","\n"," ","\n","Ein JavaScript-Job überwacht sowohl die Datei seines \n Haupt-Scripts als auch alle darin eingebundenen Dateien auf Änderung und \n lädt gegebenenfalls das gesamte Script neu.","\n\n\n"]],"2":[["Einbinden von externen Funktionen und Java-Klassen"]],"5":[["extern"]],"id":"30"})